
./Debug/lab22.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#define GPIO_ODR_HIGH ((volatile unsigned char *) (GPIO_D + 0x15))

__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8e4 	bl	200001d0 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:

#define USBDM

void app_init(void) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	#ifdef USBDM
		*((unsigned long *) 0x40023830) = 0x18;
20000014:	4b13      	ldr	r3, [pc, #76]	; (20000064 <app_init+0x54>)
20000016:	2218      	movs	r2, #24
20000018:	601a      	str	r2, [r3, #0]
	#endif
	*GPIO_MODER &= 0x00FF0000;
2000001a:	4b13      	ldr	r3, [pc, #76]	; (20000068 <app_init+0x58>)
2000001c:	6819      	ldr	r1, [r3, #0]
2000001e:	4b12      	ldr	r3, [pc, #72]	; (20000068 <app_init+0x58>)
20000020:	22ff      	movs	r2, #255	; 0xff
20000022:	0412      	lsls	r2, r2, #16
20000024:	400a      	ands	r2, r1
20000026:	601a      	str	r2, [r3, #0]
	*GPIO_OTYPER &= 0xFFFF00FF;
20000028:	4b10      	ldr	r3, [pc, #64]	; (2000006c <app_init+0x5c>)
2000002a:	881b      	ldrh	r3, [r3, #0]
2000002c:	b29b      	uxth	r3, r3
2000002e:	4a0f      	ldr	r2, [pc, #60]	; (2000006c <app_init+0x5c>)
20000030:	21ff      	movs	r1, #255	; 0xff
20000032:	400b      	ands	r3, r1
20000034:	b29b      	uxth	r3, r3
20000036:	8013      	strh	r3, [r2, #0]
	*GPIO_PUPDR &= 0x0000FFFF;
20000038:	4b0d      	ldr	r3, [pc, #52]	; (20000070 <app_init+0x60>)
2000003a:	681a      	ldr	r2, [r3, #0]
2000003c:	4b0c      	ldr	r3, [pc, #48]	; (20000070 <app_init+0x60>)
2000003e:	0412      	lsls	r2, r2, #16
20000040:	0c12      	lsrs	r2, r2, #16
20000042:	601a      	str	r2, [r3, #0]
	
	*GPIO_MODER |= 0x55005555;
20000044:	4b08      	ldr	r3, [pc, #32]	; (20000068 <app_init+0x58>)
20000046:	681a      	ldr	r2, [r3, #0]
20000048:	4b07      	ldr	r3, [pc, #28]	; (20000068 <app_init+0x58>)
2000004a:	490a      	ldr	r1, [pc, #40]	; (20000074 <app_init+0x64>)
2000004c:	430a      	orrs	r2, r1
2000004e:	601a      	str	r2, [r3, #0]
	*GPIO_PUPDR |= 0xAA000000;
20000050:	4b07      	ldr	r3, [pc, #28]	; (20000070 <app_init+0x60>)
20000052:	681a      	ldr	r2, [r3, #0]
20000054:	4b06      	ldr	r3, [pc, #24]	; (20000070 <app_init+0x60>)
20000056:	21aa      	movs	r1, #170	; 0xaa
20000058:	0609      	lsls	r1, r1, #24
2000005a:	430a      	orrs	r2, r1
2000005c:	601a      	str	r2, [r3, #0]
}
2000005e:	46c0      	nop			; (mov r8, r8)
20000060:	46bd      	mov	sp, r7
20000062:	bd80      	pop	{r7, pc}
20000064:	40023830 	andmi	r3, r2, r0, lsr r8
20000068:	40020c00 	andmi	r0, r2, r0, lsl #24
2000006c:	40020c04 	andmi	r0, r2, r4, lsl #24
20000070:	40020c0c 	andmi	r0, r2, ip, lsl #24
20000074:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab

20000078 <ActivateRow>:

void ActivateRow(unsigned int row) {
20000078:	b580      	push	{r7, lr}
2000007a:	b082      	sub	sp, #8
2000007c:	af00      	add	r7, sp, #0
2000007e:	6078      	str	r0, [r7, #4]
	switch(row) {
20000080:	687b      	ldr	r3, [r7, #4]
20000082:	2b04      	cmp	r3, #4
20000084:	d819      	bhi.n	200000ba <ActivateRow+0x42>
20000086:	687b      	ldr	r3, [r7, #4]
20000088:	009a      	lsls	r2, r3, #2
2000008a:	4b0e      	ldr	r3, [pc, #56]	; (200000c4 <ActivateRow+0x4c>)
2000008c:	18d3      	adds	r3, r2, r3
2000008e:	681b      	ldr	r3, [r3, #0]
20000090:	469f      	mov	pc, r3
		case 1: *GPIO_ODR_HIGH = 0x10; break;
20000092:	4b0d      	ldr	r3, [pc, #52]	; (200000c8 <ActivateRow+0x50>)
20000094:	2210      	movs	r2, #16
20000096:	701a      	strb	r2, [r3, #0]
20000098:	e00f      	b.n	200000ba <ActivateRow+0x42>
		case 2: *GPIO_ODR_HIGH = 0x20; break;
2000009a:	4b0b      	ldr	r3, [pc, #44]	; (200000c8 <ActivateRow+0x50>)
2000009c:	2220      	movs	r2, #32
2000009e:	701a      	strb	r2, [r3, #0]
200000a0:	e00b      	b.n	200000ba <ActivateRow+0x42>
		case 3: *GPIO_ODR_HIGH = 0x40; break;
200000a2:	4b09      	ldr	r3, [pc, #36]	; (200000c8 <ActivateRow+0x50>)
200000a4:	2240      	movs	r2, #64	; 0x40
200000a6:	701a      	strb	r2, [r3, #0]
200000a8:	e007      	b.n	200000ba <ActivateRow+0x42>
		case 4: *GPIO_ODR_HIGH = 0x80; break;
200000aa:	4b07      	ldr	r3, [pc, #28]	; (200000c8 <ActivateRow+0x50>)
200000ac:	2280      	movs	r2, #128	; 0x80
200000ae:	701a      	strb	r2, [r3, #0]
200000b0:	e003      	b.n	200000ba <ActivateRow+0x42>
		case 0: *GPIO_ODR_HIGH = 0x00; break;
200000b2:	4b05      	ldr	r3, [pc, #20]	; (200000c8 <ActivateRow+0x50>)
200000b4:	2200      	movs	r2, #0
200000b6:	701a      	strb	r2, [r3, #0]
200000b8:	46c0      	nop			; (mov r8, r8)
	}
}
200000ba:	46c0      	nop			; (mov r8, r8)
200000bc:	46bd      	mov	sp, r7
200000be:	b002      	add	sp, #8
200000c0:	bd80      	pop	{r7, pc}
200000c2:	46c0      	nop			; (mov r8, r8)
200000c4:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
200000c8:	40020c15 	andmi	r0, r2, r5, lsl ip

200000cc <ReadColumn>:

int ReadColumn(void) {
200000cc:	b580      	push	{r7, lr}
200000ce:	b082      	sub	sp, #8
200000d0:	af00      	add	r7, sp, #0
	unsigned char c;
	c = *GPIO_IDR_HIGH;
200000d2:	4a12      	ldr	r2, [pc, #72]	; (2000011c <ReadColumn+0x50>)
200000d4:	1dfb      	adds	r3, r7, #7
200000d6:	7812      	ldrb	r2, [r2, #0]
200000d8:	701a      	strb	r2, [r3, #0]
	if (c & 0x8) return 4;
200000da:	1dfb      	adds	r3, r7, #7
200000dc:	781b      	ldrb	r3, [r3, #0]
200000de:	2208      	movs	r2, #8
200000e0:	4013      	ands	r3, r2
200000e2:	d001      	beq.n	200000e8 <ReadColumn+0x1c>
200000e4:	2304      	movs	r3, #4
200000e6:	e015      	b.n	20000114 <ReadColumn+0x48>
	if (c & 0x4) return 3;
200000e8:	1dfb      	adds	r3, r7, #7
200000ea:	781b      	ldrb	r3, [r3, #0]
200000ec:	2204      	movs	r2, #4
200000ee:	4013      	ands	r3, r2
200000f0:	d001      	beq.n	200000f6 <ReadColumn+0x2a>
200000f2:	2303      	movs	r3, #3
200000f4:	e00e      	b.n	20000114 <ReadColumn+0x48>
	if (c & 0x2) return 2;
200000f6:	1dfb      	adds	r3, r7, #7
200000f8:	781b      	ldrb	r3, [r3, #0]
200000fa:	2202      	movs	r2, #2
200000fc:	4013      	ands	r3, r2
200000fe:	d001      	beq.n	20000104 <ReadColumn+0x38>
20000100:	2302      	movs	r3, #2
20000102:	e007      	b.n	20000114 <ReadColumn+0x48>
	if (c & 0x1) return 1;
20000104:	1dfb      	adds	r3, r7, #7
20000106:	781b      	ldrb	r3, [r3, #0]
20000108:	2201      	movs	r2, #1
2000010a:	4013      	ands	r3, r2
2000010c:	d001      	beq.n	20000112 <ReadColumn+0x46>
2000010e:	2301      	movs	r3, #1
20000110:	e000      	b.n	20000114 <ReadColumn+0x48>
	return 0;
20000112:	2300      	movs	r3, #0
}
20000114:	0018      	movs	r0, r3
20000116:	46bd      	mov	sp, r7
20000118:	b002      	add	sp, #8
2000011a:	bd80      	pop	{r7, pc}
2000011c:	40020c11 	andmi	r0, r2, r1, lsl ip

20000120 <keyb>:

unsigned char keyb(void) {
20000120:	b590      	push	{r4, r7, lr}
20000122:	b087      	sub	sp, #28
20000124:	af00      	add	r7, sp, #0
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};
20000126:	003b      	movs	r3, r7
20000128:	4a16      	ldr	r2, [pc, #88]	; (20000184 <keyb+0x64>)
2000012a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000012c:	c313      	stmia	r3!, {r0, r1, r4}
2000012e:	6812      	ldr	r2, [r2, #0]
20000130:	601a      	str	r2, [r3, #0]
	int row, col;
	for (row=1; row <=4 ; row++) {
20000132:	2301      	movs	r3, #1
20000134:	617b      	str	r3, [r7, #20]
20000136:	e019      	b.n	2000016c <keyb+0x4c>
		ActivateRow(row);
20000138:	697b      	ldr	r3, [r7, #20]
2000013a:	0018      	movs	r0, r3
2000013c:	f7ff ff9c 	bl	20000078 <ActivateRow>
		if( col = ReadColumn() ){
20000140:	f7ff ffc4 	bl	200000cc <ReadColumn>
20000144:	0003      	movs	r3, r0
20000146:	613b      	str	r3, [r7, #16]
20000148:	693b      	ldr	r3, [r7, #16]
2000014a:	2b00      	cmp	r3, #0
2000014c:	d00b      	beq.n	20000166 <keyb+0x46>
			ActivateRow(0);
2000014e:	2000      	movs	r0, #0
20000150:	f7ff ff92 	bl	20000078 <ActivateRow>
			return key[4*(row-1)+(col-1)];
20000154:	697b      	ldr	r3, [r7, #20]
20000156:	3b01      	subs	r3, #1
20000158:	009a      	lsls	r2, r3, #2
2000015a:	693b      	ldr	r3, [r7, #16]
2000015c:	3b01      	subs	r3, #1
2000015e:	18d3      	adds	r3, r2, r3
20000160:	003a      	movs	r2, r7
20000162:	5cd3      	ldrb	r3, [r2, r3]
20000164:	e009      	b.n	2000017a <keyb+0x5a>
	for (row=1; row <=4 ; row++) {
20000166:	697b      	ldr	r3, [r7, #20]
20000168:	3301      	adds	r3, #1
2000016a:	617b      	str	r3, [r7, #20]
2000016c:	697b      	ldr	r3, [r7, #20]
2000016e:	2b04      	cmp	r3, #4
20000170:	dde2      	ble.n	20000138 <keyb+0x18>
		}
	}
	ActivateRow(0);
20000172:	2000      	movs	r0, #0
20000174:	f7ff ff80 	bl	20000078 <ActivateRow>
	return 0xFF;
20000178:	23ff      	movs	r3, #255	; 0xff
}
2000017a:	0018      	movs	r0, r3
2000017c:	46bd      	mov	sp, r7
2000017e:	b007      	add	sp, #28
20000180:	bd90      	pop	{r4, r7, pc}
20000182:	46c0      	nop			; (mov r8, r8)
20000184:	20000204 	andcs	r0, r0, r4, lsl #4

20000188 <out7seg>:

void out7seg(unsigned char c) {
20000188:	b590      	push	{r4, r7, lr}
2000018a:	b087      	sub	sp, #28
2000018c:	af00      	add	r7, sp, #0
2000018e:	0002      	movs	r2, r0
20000190:	1dfb      	adds	r3, r7, #7
20000192:	701a      	strb	r2, [r3, #0]
	char segCode[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x0F, 0x5E, 0x79, 0x71};
20000194:	2308      	movs	r3, #8
20000196:	18fb      	adds	r3, r7, r3
20000198:	4a0b      	ldr	r2, [pc, #44]	; (200001c8 <out7seg+0x40>)
2000019a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000019c:	c313      	stmia	r3!, {r0, r1, r4}
2000019e:	6812      	ldr	r2, [r2, #0]
200001a0:	601a      	str	r2, [r3, #0]
	if (c <= 15) {
200001a2:	1dfb      	adds	r3, r7, #7
200001a4:	781b      	ldrb	r3, [r3, #0]
200001a6:	2b0f      	cmp	r3, #15
200001a8:	d807      	bhi.n	200001ba <out7seg+0x32>
		*GPIO_ODR_LOW = segCode[c];
200001aa:	1dfb      	adds	r3, r7, #7
200001ac:	781b      	ldrb	r3, [r3, #0]
200001ae:	4907      	ldr	r1, [pc, #28]	; (200001cc <out7seg+0x44>)
200001b0:	2208      	movs	r2, #8
200001b2:	18ba      	adds	r2, r7, r2
200001b4:	5cd3      	ldrb	r3, [r2, r3]
200001b6:	700b      	strb	r3, [r1, #0]
	} else {
		*GPIO_ODR_LOW = 0;
	}
}
200001b8:	e002      	b.n	200001c0 <out7seg+0x38>
		*GPIO_ODR_LOW = 0;
200001ba:	4b04      	ldr	r3, [pc, #16]	; (200001cc <out7seg+0x44>)
200001bc:	2200      	movs	r2, #0
200001be:	701a      	strb	r2, [r3, #0]
}
200001c0:	46c0      	nop			; (mov r8, r8)
200001c2:	46bd      	mov	sp, r7
200001c4:	b007      	add	sp, #28
200001c6:	bd90      	pop	{r4, r7, pc}
200001c8:	20000214 	andcs	r0, r0, r4, lsl r2
200001cc:	40020c14 	andmi	r0, r2, r4, lsl ip

200001d0 <main>:

void main(void) {
200001d0:	b590      	push	{r4, r7, lr}
200001d2:	b083      	sub	sp, #12
200001d4:	af00      	add	r7, sp, #0
	unsigned char c;
	app_init();
200001d6:	f7ff ff1b 	bl	20000010 <app_init>
	while(1) {
		c = keyb();
200001da:	1dfc      	adds	r4, r7, #7
200001dc:	f7ff ffa0 	bl	20000120 <keyb>
200001e0:	0003      	movs	r3, r0
200001e2:	7023      	strb	r3, [r4, #0]
		out7seg(c);
200001e4:	1dfb      	adds	r3, r7, #7
200001e6:	781b      	ldrb	r3, [r3, #0]
200001e8:	0018      	movs	r0, r3
200001ea:	f7ff ffcd 	bl	20000188 <out7seg>
		c = keyb();
200001ee:	e7f4      	b.n	200001da <main+0xa>
200001f0:	200000b2 	strhcs	r0, [r0], -r2
200001f4:	20000092 	mulcs	r0, r2, r0
200001f8:	2000009a 	mulcs	r0, sl, r0
200001fc:	200000a2 	andcs	r0, r0, r2, lsr #1
20000200:	200000aa 	andcs	r0, r0, sl, lsr #1
20000204:	0a030201 	beq	200c0a10 <main+0xc0840>
20000208:	0b060504 	bleq	20181620 <main+0x181450>
2000020c:	0c090807 	stceq	8, cr0, [r9], {7}
20000210:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 200001e0 <main+0x10>
20000214:	4f5b063f 	svcmi	0x005b063f
20000218:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
2000021c:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	; 0xfffffe04
20000220:	71795e0f 	cmnvc	r9, pc, lsl #28

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000160 	andeq	r0, r0, r0, ror #2
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	000000ae 	andeq	r0, r0, lr, lsr #1
  10:	0000120c 	andeq	r1, r0, ip, lsl #4
  14:	00014b00 	andeq	r4, r1, r0, lsl #22
	...
  24:	01460200 	mrseq	r0, (UNDEF: 102)
  28:	55010000 	strpl	r0, [r1, #-0]
  2c:	200001d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  30:	00000020 	andeq	r0, r0, r0, lsr #32
  34:	00479c01 	subeq	r9, r7, r1, lsl #24
  38:	63030000 	movwvs	r0, #12288	; 0x3000
  3c:	47560100 	ldrbmi	r0, [r6, -r0, lsl #2]
  40:	02000000 	andeq	r0, r0, #0
  44:	04006f91 	streq	r6, [r0], #-3985	; 0xfffff06f
  48:	00a00801 	adceq	r0, r0, r1, lsl #16
  4c:	87050000 	strhi	r0, [r5, -r0]
  50:	01000000 	mrseq	r0, (UNDEF: 0)
  54:	0001884c 	andeq	r8, r1, ip, asr #16
  58:	00004820 	andeq	r4, r0, r0, lsr #16
  5c:	7e9c0100 	fmlvce	f0, f4, f0
  60:	06000000 	streq	r0, [r0], -r0
  64:	4c010063 	stcmi	0, cr0, [r1], {99}	; 0x63
  68:	00000047 	andeq	r0, r0, r7, asr #32
  6c:	075f9102 	ldrbeq	r9, [pc, -r2, lsl #2]
  70:	0000007f 	andeq	r0, r0, pc, ror r0
  74:	007e4d01 	rsbseq	r4, lr, r1, lsl #26
  78:	91020000 	mrsls	r0, (UNDEF: 2)
  7c:	95080060 	strls	r0, [r8, #-96]	; 0xffffffa0
  80:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
  84:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
  88:	0000008e 	andeq	r0, r0, lr, lsl #1
  8c:	0404000f 	streq	r0, [r4], #-15
  90:	00000007 	andeq	r0, r0, r7
  94:	08010400 	stmdaeq	r1, {sl}
  98:	000000a9 	andeq	r0, r0, r9, lsr #1
  9c:	00000d0a 	andeq	r0, r0, sl, lsl #26
  a0:	473e0100 	ldrmi	r0, [lr, -r0, lsl #2]!
  a4:	20000000 	andcs	r0, r0, r0
  a8:	68200001 	stmdavs	r0!, {r0}
  ac:	01000000 	mrseq	r0, (UNDEF: 0)
  b0:	0000e09c 	muleq	r0, ip, r0
  b4:	656b0300 	strbvs	r0, [fp, #-768]!	; 0xfffffd00
  b8:	3f010079 	svccc	0x00010079
  bc:	000000e0 	andeq	r0, r0, r0, ror #1
  c0:	03589102 	cmpeq	r8, #-2147483648	; 0x80000000
  c4:	00776f72 	rsbseq	r6, r7, r2, ror pc
  c8:	00f04001 	rscseq	r4, r0, r1
  cc:	91020000 	mrsls	r0, (UNDEF: 2)
  d0:	6f63036c 	svcvs	0x0063036c
  d4:	4001006c 	andmi	r0, r1, ip, rrx
  d8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  dc:	00689102 	rsbeq	r9, r8, r2, lsl #2
  e0:	00004708 	andeq	r4, r0, r8, lsl #14
  e4:	0000f000 	andeq	pc, r0, r0
  e8:	008e0900 	addeq	r0, lr, r0, lsl #18
  ec:	000f0000 	andeq	r0, pc, r0
  f0:	6905040b 	stmdbvs	r5, {r0, r1, r3, sl}
  f4:	0c00746e 	cfstrseq	mvf7, [r0], {110}	; 0x6e
  f8:	00000074 	andeq	r0, r0, r4, ror r0
  fc:	00f03401 	rscseq	r3, r0, r1, lsl #8
 100:	00cc0000 	sbceq	r0, ip, r0
 104:	00542000 	subseq	r2, r4, r0
 108:	9c010000 	stcls	0, cr0, [r1], {-0}
 10c:	0000011d 	andeq	r0, r0, sp, lsl r1
 110:	01006303 	tsteq	r0, r3, lsl #6
 114:	00004735 	andeq	r4, r0, r5, lsr r7
 118:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 11c:	00680500 	rsbeq	r0, r8, r0, lsl #10
 120:	2a010000 	bcs	40128 <startup-0x1ffbfed8>
 124:	20000078 	andcs	r0, r0, r8, ror r0
 128:	00000054 	andeq	r0, r0, r4, asr r0
 12c:	01419c01 	cmpeq	r1, r1, lsl #24
 130:	72060000 	andvc	r0, r6, #0
 134:	0100776f 	tsteq	r0, pc, ror #14
 138:	00008e2a 	andeq	r8, r0, sl, lsr #28
 13c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 140:	008f0d00 	addeq	r0, pc, r0, lsl #26
 144:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
 148:	20000010 	andcs	r0, r0, r0, lsl r0
 14c:	00000068 	andeq	r0, r0, r8, rrx
 150:	980d9c01 	stmdals	sp, {r0, sl, fp, ip, pc}
 154:	01000000 	mrseq	r0, (UNDEF: 0)
 158:	00000014 	andeq	r0, r0, r4, lsl r0
 15c:	00000c20 	andeq	r0, r0, r0, lsr #24
 160:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  20:	06120111 			; <UNDEFINED> instruction: 0x06120111
  24:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  28:	00130119 	andseq	r0, r3, r9, lsl r1
  2c:	00340300 	eorseq	r0, r4, r0, lsl #6
  30:	0b3a0803 	bleq	e82044 <startup-0x1f17dfbc>
  34:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  38:	00001802 	andeq	r1, r0, r2, lsl #16
  3c:	0b002404 	bleq	9054 <startup-0x1fff6fac>
  40:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  44:	0500000e 	streq	r0, [r0, #-14]
  48:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  4c:	0b3a0e03 	bleq	e83860 <startup-0x1f17c7a0>
  50:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  54:	06120111 			; <UNDEFINED> instruction: 0x06120111
  58:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  5c:	00130119 	andseq	r0, r3, r9, lsl r1
  60:	00050600 	andeq	r0, r5, r0, lsl #12
  64:	0b3a0803 	bleq	e82078 <startup-0x1f17df88>
  68:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  6c:	00001802 	andeq	r1, r0, r2, lsl #16
  70:	03003407 	movweq	r3, #1031	; 0x407
  74:	3b0b3a0e 	blcc	2ce8b4 <startup-0x1fd3174c>
  78:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  7c:	08000018 	stmdaeq	r0, {r3, r4}
  80:	13490101 	movtne	r0, #37121	; 0x9101
  84:	00001301 	andeq	r1, r0, r1, lsl #6
  88:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
  8c:	000b2f13 	andeq	r2, fp, r3, lsl pc
  90:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	13491927 	movtne	r1, #39207	; 0x9927
  a0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  a4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  a8:	00130119 	andseq	r0, r3, r9, lsl r1
  ac:	00240b00 	eoreq	r0, r4, r0, lsl #22
  b0:	0b3e0b0b 	bleq	f82ce4 <startup-0x1f07d31c>
  b4:	00000803 	andeq	r0, r0, r3, lsl #16
  b8:	3f012e0c 	svccc	0x00012e0c
  bc:	3a0e0319 	bcc	380d28 <startup-0x1fc7f2d8>
  c0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  c4:	11134919 	tstne	r3, r9, lsl r9
  c8:	40061201 	andmi	r1, r6, r1, lsl #4
  cc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  d0:	00001301 	andeq	r1, r0, r1, lsl #6
  d4:	3f002e0d 	svccc	0x00002e0d
  d8:	3a0e0319 	bcc	380d44 <startup-0x1fc7f2bc>
  dc:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  e0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  e4:	97184006 	ldrls	r4, [r8, -r6]
  e8:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001e0 	andeq	r0, r0, r0, ror #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000fa 	strdeq	r0, [r0], -sl
   4:	006c0002 	rsbeq	r0, ip, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	77697265 	strbvc	r7, [r9, -r5, ror #4]!
  28:	442f7365 	strtmi	r7, [pc], #-869	; 30 <startup-0x1fffffd0>
  2c:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
  30:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
  34:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
  38:	2d373130 	ldfcss	f3, [r7, #-192]!	; 0xffffff40
  3c:	7473616d 	ldrbtvc	r6, [r3], #-365	; 0xfffffe93
  40:	4c2f7265 	sfmmi	f7, 4, [pc], #-404	; fffffeb4 <main+0xdffffce4>
  44:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  48:	6f697461 	svcvs	0x00697461
  4c:	4c2f316e 	stfmis	f3, [pc], #-440	; fffffe9c <main+0xdffffccc>
  50:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  54:	6f697461 	svcvs	0x00697461
  58:	6966736e 	stmdbvs	r6!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
  5c:	4372656c 	cmnmi	r2, #108, 10	; 0x1b000000
  60:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
  64:	00003232 	andeq	r3, r0, r2, lsr r2
  68:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  6c:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  70:	00010063 	andeq	r0, r1, r3, rrx
  74:	05000000 	streq	r0, [r0, #-0]
  78:	00000002 	andeq	r0, r0, r2
  7c:	01140320 	tsteq	r4, r0, lsr #6
  80:	2f212113 	svccs	0x00212113
  84:	00030221 	andeq	r0, r3, r1, lsr #4
  88:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
  8c:	00001002 	andeq	r1, r0, r2
  90:	011d0320 	tsteq	sp, r0, lsr #6
  94:	83753e30 	cmnhi	r5, #48, 28	; 0x300
  98:	ca756768 	bgt	1d59e40 <startup-0x1e2a61c0>
  9c:	4b4b914b 	blmi	12e45d0 <startup-0x1ed1ba30>
  a0:	924c4b4b 	subls	r4, ip, #76800	; 0x12c00
  a4:	02004b3e 	andeq	r4, r0, #63488	; 0xf800
  a8:	58060104 	stmdapl	r6, {r2, r8}
  ac:	02002f06 	andeq	r2, r0, #6, 30
  b0:	58060104 	stmdapl	r6, {r2, r8}
  b4:	02002f06 	andeq	r2, r0, #6, 30
  b8:	58060104 	stmdapl	r6, {r2, r8}
  bc:	02002f06 	andeq	r2, r0, #6, 30
  c0:	58060104 	stmdapl	r6, {r2, r8}
  c4:	68212f06 	stmdavs	r1!, {r1, r2, r8, r9, sl, fp, sp}
  c8:	4b3d683d 	blmi	f5a1c4 <startup-0x1f0a5e3c>
  cc:	02003d75 	andeq	r3, r0, #7488	; 0x1d40
  d0:	008c0204 	addeq	r0, ip, r4, lsl #4
  d4:	06010402 	streq	r0, [r1], -r2, lsl #8
  d8:	3d43063c 	stclcc	6, cr0, [r3, #-240]	; 0xffffff10
  dc:	01040200 	mrseq	r0, R12_usr
  e0:	75677621 	strbvc	r7, [r7, #-1569]!	; 0xfffff9df
  e4:	3e1e784b 	cdpcc	8, 1, cr7, cr14, cr11, {2}
  e8:	02003e84 	andeq	r3, r0, #132, 28	; 0x840
  ec:	00300104 	eorseq	r0, r0, r4, lsl #2
  f0:	59010402 	stmdbpl	r1, {r1, sl}
  f4:	01040200 	mrseq	r0, R12_usr
  f8:	00010257 	andeq	r0, r1, r7, asr r2
  fc:	Address 0x000000fc is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  10:	3a430062 	bcc	10c01a0 <startup-0x1ef3fe60>
  14:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
  18:	652f7372 	strvs	r7, [pc, #-882]!	; fffffcae <main+0xdffffade>
  1c:	65776972 	ldrbvs	r6, [r7, #-2418]!	; 0xfffff68e
  20:	6f442f73 	svcvs	0x00442f73
  24:	6f6c6e77 	svcvs	0x006c6e77
  28:	2f736461 	svccs	0x00736461
  2c:	30544144 	subscc	r4, r4, r4, asr #2
  30:	6d2d3731 	stcvs	7, cr3, [sp, #-196]!	; 0xffffff3c
  34:	65747361 	ldrbvs	r7, [r4, #-865]!	; 0xfffffc9f
  38:	614c2f72 	hvcvs	49906	; 0xc2f2
  3c:	61726f62 	cmnvs	r2, r2, ror #30
  40:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  44:	614c2f31 	cmpvs	ip, r1, lsr pc
  48:	61726f62 	cmnvs	r2, r2, ror #30
  4c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  50:	6c696673 	stclvs	6, cr6, [r9], #-460	; 0xfffffe34
  54:	2f437265 	svccs	0x00437265
  58:	3262616c 	rsbcc	r6, r2, #108, 2
  5c:	74732f32 	ldrbtvc	r2, [r3], #-3890	; 0xfffff0ce
  60:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  64:	00632e70 	rsbeq	r2, r3, r0, ror lr
  68:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
  6c:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
  70:	00776f52 	rsbseq	r6, r7, r2, asr pc
  74:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
  78:	756c6f43 	strbvc	r6, [ip, #-3907]!	; 0xfffff0bd
  7c:	73006e6d 	movwvc	r6, #3693	; 0xe6d
  80:	6f436765 	svcvs	0x00436765
  84:	6f006564 	svcvs	0x00006564
  88:	73377475 	teqvc	r7, #1962934272	; 0x75000000
  8c:	61006765 	tstvs	r0, r5, ror #14
  90:	695f7070 	ldmdbvs	pc, {r4, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
  94:	0074696e 	rsbseq	r6, r4, lr, ror #18
  98:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  9c:	00707574 	rsbseq	r7, r0, r4, ror r5
  a0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  a4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  a8:	61686320 	cmnvs	r8, r0, lsr #6
  ac:	4e470072 	mcrmi	0, 2, r0, cr7, cr2, {3}
  b0:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  b4:	2e372039 	mrccs	0, 1, r2, cr7, cr9, {1}
  b8:	20312e32 	eorscs	r2, r1, r2, lsr lr
  bc:	37313032 			; <UNDEFINED> instruction: 0x37313032
  c0:	34303930 	ldrtcc	r3, [r0], #-2352	; 0xfffff6d0
  c4:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  c8:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  cc:	5b202965 	blpl	80a668 <startup-0x1f7f5998>
  d0:	2f4d5241 	svccs	0x004d5241
  d4:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  d8:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  dc:	622d372d 	eorvs	r3, sp, #11796480	; 0xb40000
  e0:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  e4:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  e8:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  ec:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  f0:	30323535 	eorscc	r3, r2, r5, lsr r5
  f4:	2d205d34 	stccs	13, cr5, [r0, #-208]!	; 0xffffff30
  f8:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  fc:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
 100:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
 104:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
 108:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
 10c:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
 110:	616f6c66 	cmnvs	pc, r6, ror #24
 114:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
 118:	6f733d69 	svcvs	0x00733d69
 11c:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
 120:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
 124:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
 128:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
 12c:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
 130:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
 134:	672d206d 	strvs	r2, [sp, -sp, rrx]!
 138:	304f2d20 	subcc	r2, pc, r0, lsr #26
 13c:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
 140:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
 144:	616d0039 	cmnvs	sp, r9, lsr r0
 148:	43006e69 	movwmi	r6, #3689	; 0xe69
 14c:	73555c3a 	cmpvc	r5, #14848	; 0x3a00
 150:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
 154:	77697265 	strbvc	r7, [r9, -r5, ror #4]!
 158:	445c7365 	ldrbmi	r7, [ip], #-869	; 0xfffffc9b
 15c:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 160:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 164:	5441445c 	strbpl	r4, [r1], #-1116	; 0xfffffba4
 168:	2d373130 	ldfcss	f3, [r7, #-192]!	; 0xffffff40
 16c:	7473616d 	ldrbtvc	r6, [r3], #-365	; 0xfffffe93
 170:	4c5c7265 	lfmmi	f7, 2, [ip], {101}	; 0x65
 174:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
 178:	6f697461 	svcvs	0x00697461
 17c:	4c5c316e 	ldfmie	f3, [ip], {110}	; 0x6e
 180:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
 184:	6f697461 	svcvs	0x00697461
 188:	6966736e 	stmdbvs	r6!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
 18c:	4372656c 	cmnmi	r2, #108, 10	; 0x1b000000
 190:	62616c5c 	rsbvs	r6, r1, #92, 24	; 0x5c00
 194:	Address 0x00000194 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <main+0xdffff13e>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000068 	andeq	r0, r0, r8, rrx
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000078 	andcs	r0, r0, r8, ror r0
  48:	00000054 	andeq	r0, r0, r4, asr r0
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	100e4101 	andne	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	200000cc 	andcs	r0, r0, ip, asr #1
  68:	00000054 	andeq	r0, r0, r4, asr r0
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	100e4101 	andne	r4, lr, r1, lsl #2
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	00000020 	andeq	r0, r0, r0, lsr #32
  80:	00000000 	andeq	r0, r0, r0
  84:	20000120 	andcs	r0, r0, r0, lsr #2
  88:	00000068 	andeq	r0, r0, r8, rrx
  8c:	400c0e41 	andmi	r0, ip, r1, asr #28
  90:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  94:	018e4002 	orreq	r4, lr, r2
  98:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  9c:	0000070d 	andeq	r0, r0, sp, lsl #14
  a0:	00000020 	andeq	r0, r0, r0, lsr #32
  a4:	00000000 	andeq	r0, r0, r0
  a8:	20000188 	andcs	r0, r0, r8, lsl #3
  ac:	00000048 	andeq	r0, r0, r8, asr #32
  b0:	400c0e41 	andmi	r0, ip, r1, asr #28
  b4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  b8:	018e4002 	orreq	r4, lr, r2
  bc:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  c0:	0000070d 	andeq	r0, r0, sp, lsl #14
  c4:	00000020 	andeq	r0, r0, r0, lsr #32
  c8:	00000000 	andeq	r0, r0, r0
  cc:	200001d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  d0:	00000020 	andeq	r0, r0, r0, lsr #32
  d4:	400c0e41 	andmi	r0, ip, r1, asr #28
  d8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  dc:	018e4002 	orreq	r4, lr, r2
  e0:	41180e41 	tstmi	r8, r1, asr #28
  e4:	0000070d 	andeq	r0, r0, sp, lsl #14
