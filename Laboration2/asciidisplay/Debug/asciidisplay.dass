
./Debug/asciidisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#define B_RS 1

__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f9db 	bl	200003be <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:

void app_init() {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*GPIO_MODER &= 0x00000000;
20000014:	4b06      	ldr	r3, [pc, #24]	; (20000030 <app_init+0x20>)
20000016:	681b      	ldr	r3, [r3, #0]
20000018:	4b05      	ldr	r3, [pc, #20]	; (20000030 <app_init+0x20>)
2000001a:	2200      	movs	r2, #0
2000001c:	601a      	str	r2, [r3, #0]
	*GPIO_MODER |= 0x55555555;
2000001e:	4b04      	ldr	r3, [pc, #16]	; (20000030 <app_init+0x20>)
20000020:	681a      	ldr	r2, [r3, #0]
20000022:	4b03      	ldr	r3, [pc, #12]	; (20000030 <app_init+0x20>)
20000024:	4903      	ldr	r1, [pc, #12]	; (20000034 <app_init+0x24>)
20000026:	430a      	orrs	r2, r1
20000028:	601a      	str	r2, [r3, #0]
}
2000002a:	46c0      	nop			; (mov r8, r8)
2000002c:	46bd      	mov	sp, r7
2000002e:	bd80      	pop	{r7, pc}
20000030:	40021000 	andmi	r1, r2, r0
20000034:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000038 <delay_250_ns>:

#define SIMULATOR

void delay_250_ns(void) {
20000038:	b580      	push	{r7, lr}
2000003a:	af00      	add	r7, sp, #0
	*STK_CTRL = 0;
2000003c:	4b09      	ldr	r3, [pc, #36]	; (20000064 <delay_250_ns+0x2c>)
2000003e:	2200      	movs	r2, #0
20000040:	601a      	str	r2, [r3, #0]
	*STK_LOAD = (168-1)/4;
20000042:	4b09      	ldr	r3, [pc, #36]	; (20000068 <delay_250_ns+0x30>)
20000044:	2229      	movs	r2, #41	; 0x29
20000046:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20000048:	4b08      	ldr	r3, [pc, #32]	; (2000006c <delay_250_ns+0x34>)
2000004a:	2200      	movs	r2, #0
2000004c:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
2000004e:	4b05      	ldr	r3, [pc, #20]	; (20000064 <delay_250_ns+0x2c>)
20000050:	2205      	movs	r2, #5
20000052:	601a      	str	r2, [r3, #0]
	while(*STK_CTRL & 0x00010000 == 0);
20000054:	46c0      	nop			; (mov r8, r8)
	*STK_CTRL = 0;
20000056:	4b03      	ldr	r3, [pc, #12]	; (20000064 <delay_250_ns+0x2c>)
20000058:	2200      	movs	r2, #0
2000005a:	601a      	str	r2, [r3, #0]
}
2000005c:	46c0      	nop			; (mov r8, r8)
2000005e:	46bd      	mov	sp, r7
20000060:	bd80      	pop	{r7, pc}
20000062:	46c0      	nop			; (mov r8, r8)
20000064:	e000e010 	and	lr, r0, r0, lsl r0
20000068:	e000e014 	and	lr, r0, r4, lsl r0
2000006c:	e000e018 	and	lr, r0, r8, lsl r0

20000070 <delay_micro>:

void delay_micro(unsigned int ms) {
20000070:	b580      	push	{r7, lr}
20000072:	b084      	sub	sp, #16
20000074:	af00      	add	r7, sp, #0
20000076:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		ms /= 1000;
20000078:	687b      	ldr	r3, [r7, #4]
2000007a:	22fa      	movs	r2, #250	; 0xfa
2000007c:	0091      	lsls	r1, r2, #2
2000007e:	0018      	movs	r0, r3
20000080:	f000 f9de 	bl	20000440 <__udivsi3>
20000084:	0003      	movs	r3, r0
20000086:	607b      	str	r3, [r7, #4]
		ms++;
20000088:	687b      	ldr	r3, [r7, #4]
2000008a:	3301      	adds	r3, #1
2000008c:	607b      	str	r3, [r7, #4]
	#endif
	
	while(ms > 0) {
2000008e:	e00b      	b.n	200000a8 <delay_micro+0x38>
		for(int i = 0; i < 4; i++) {
20000090:	2300      	movs	r3, #0
20000092:	60fb      	str	r3, [r7, #12]
20000094:	e002      	b.n	2000009c <delay_micro+0x2c>
20000096:	68fb      	ldr	r3, [r7, #12]
20000098:	3301      	adds	r3, #1
2000009a:	60fb      	str	r3, [r7, #12]
2000009c:	68fb      	ldr	r3, [r7, #12]
2000009e:	2b03      	cmp	r3, #3
200000a0:	ddf9      	ble.n	20000096 <delay_micro+0x26>
			delay_250_ns;
		}
		ms--;
200000a2:	687b      	ldr	r3, [r7, #4]
200000a4:	3b01      	subs	r3, #1
200000a6:	607b      	str	r3, [r7, #4]
	while(ms > 0) {
200000a8:	687b      	ldr	r3, [r7, #4]
200000aa:	2b00      	cmp	r3, #0
200000ac:	d1f0      	bne.n	20000090 <delay_micro+0x20>
	}
}
200000ae:	46c0      	nop			; (mov r8, r8)
200000b0:	46c0      	nop			; (mov r8, r8)
200000b2:	46bd      	mov	sp, r7
200000b4:	b004      	add	sp, #16
200000b6:	bd80      	pop	{r7, pc}

200000b8 <delay_milli>:

void delay_milli(unsigned int ms) {
200000b8:	b580      	push	{r7, lr}
200000ba:	b082      	sub	sp, #8
200000bc:	af00      	add	r7, sp, #0
200000be:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		ms /= 1000;
200000c0:	687b      	ldr	r3, [r7, #4]
200000c2:	22fa      	movs	r2, #250	; 0xfa
200000c4:	0091      	lsls	r1, r2, #2
200000c6:	0018      	movs	r0, r3
200000c8:	f000 f9ba 	bl	20000440 <__udivsi3>
200000cc:	0003      	movs	r3, r0
200000ce:	607b      	str	r3, [r7, #4]
		ms++;
200000d0:	687b      	ldr	r3, [r7, #4]
200000d2:	3301      	adds	r3, #1
200000d4:	607b      	str	r3, [r7, #4]
	#endif
	
	while(ms > 0) {
200000d6:	e007      	b.n	200000e8 <delay_milli+0x30>
		delay_micro(1000);
200000d8:	23fa      	movs	r3, #250	; 0xfa
200000da:	009b      	lsls	r3, r3, #2
200000dc:	0018      	movs	r0, r3
200000de:	f7ff ffc7 	bl	20000070 <delay_micro>
		ms--;
200000e2:	687b      	ldr	r3, [r7, #4]
200000e4:	3b01      	subs	r3, #1
200000e6:	607b      	str	r3, [r7, #4]
	while(ms > 0) {
200000e8:	687b      	ldr	r3, [r7, #4]
200000ea:	2b00      	cmp	r3, #0
200000ec:	d1f4      	bne.n	200000d8 <delay_milli+0x20>
	}
}
200000ee:	46c0      	nop			; (mov r8, r8)
200000f0:	46c0      	nop			; (mov r8, r8)
200000f2:	46bd      	mov	sp, r7
200000f4:	b002      	add	sp, #8
200000f6:	bd80      	pop	{r7, pc}

200000f8 <ascii_ctrl_bit_set>:

void ascii_ctrl_bit_set(unsigned char c) {
200000f8:	b580      	push	{r7, lr}
200000fa:	b084      	sub	sp, #16
200000fc:	af00      	add	r7, sp, #0
200000fe:	0002      	movs	r2, r0
20000100:	1dfb      	adds	r3, r7, #7
20000102:	701a      	strb	r2, [r3, #0]
	unsigned char current = *GPIO_ODR_LOW;
20000104:	4a09      	ldr	r2, [pc, #36]	; (2000012c <ascii_ctrl_bit_set+0x34>)
20000106:	210f      	movs	r1, #15
20000108:	187b      	adds	r3, r7, r1
2000010a:	7812      	ldrb	r2, [r2, #0]
2000010c:	701a      	strb	r2, [r3, #0]
	*GPIO_ODR_LOW = B_SELECT | current | c;
2000010e:	187a      	adds	r2, r7, r1
20000110:	1dfb      	adds	r3, r7, #7
20000112:	7812      	ldrb	r2, [r2, #0]
20000114:	781b      	ldrb	r3, [r3, #0]
20000116:	4313      	orrs	r3, r2
20000118:	b2db      	uxtb	r3, r3
2000011a:	4a04      	ldr	r2, [pc, #16]	; (2000012c <ascii_ctrl_bit_set+0x34>)
2000011c:	2104      	movs	r1, #4
2000011e:	430b      	orrs	r3, r1
20000120:	b2db      	uxtb	r3, r3
20000122:	7013      	strb	r3, [r2, #0]
}
20000124:	46c0      	nop			; (mov r8, r8)
20000126:	46bd      	mov	sp, r7
20000128:	b004      	add	sp, #16
2000012a:	bd80      	pop	{r7, pc}
2000012c:	40021014 	andmi	r1, r2, r4, lsl r0

20000130 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char c) {
20000130:	b580      	push	{r7, lr}
20000132:	b084      	sub	sp, #16
20000134:	af00      	add	r7, sp, #0
20000136:	0002      	movs	r2, r0
20000138:	1dfb      	adds	r3, r7, #7
2000013a:	701a      	strb	r2, [r3, #0]
	unsigned char current = *GPIO_ODR_LOW;
2000013c:	4a0c      	ldr	r2, [pc, #48]	; (20000170 <ascii_ctrl_bit_clear+0x40>)
2000013e:	210f      	movs	r1, #15
20000140:	187b      	adds	r3, r7, r1
20000142:	7812      	ldrb	r2, [r2, #0]
20000144:	701a      	strb	r2, [r3, #0]
	*GPIO_ODR_LOW = B_SELECT | (current & ~c);
20000146:	1dfb      	adds	r3, r7, #7
20000148:	781b      	ldrb	r3, [r3, #0]
2000014a:	b25b      	sxtb	r3, r3
2000014c:	43db      	mvns	r3, r3
2000014e:	b25b      	sxtb	r3, r3
20000150:	187a      	adds	r2, r7, r1
20000152:	7812      	ldrb	r2, [r2, #0]
20000154:	b252      	sxtb	r2, r2
20000156:	4013      	ands	r3, r2
20000158:	b25b      	sxtb	r3, r3
2000015a:	2204      	movs	r2, #4
2000015c:	4313      	orrs	r3, r2
2000015e:	b25a      	sxtb	r2, r3
20000160:	4b03      	ldr	r3, [pc, #12]	; (20000170 <ascii_ctrl_bit_clear+0x40>)
20000162:	b2d2      	uxtb	r2, r2
20000164:	701a      	strb	r2, [r3, #0]
}
20000166:	46c0      	nop			; (mov r8, r8)
20000168:	46bd      	mov	sp, r7
2000016a:	b004      	add	sp, #16
2000016c:	bd80      	pop	{r7, pc}
2000016e:	46c0      	nop			; (mov r8, r8)
20000170:	40021014 	andmi	r1, r2, r4, lsl r0

20000174 <ascii_write_controller>:

void ascii_write_controller(unsigned char byte) {
20000174:	b580      	push	{r7, lr}
20000176:	b082      	sub	sp, #8
20000178:	af00      	add	r7, sp, #0
2000017a:	0002      	movs	r2, r0
2000017c:	1dfb      	adds	r3, r7, #7
2000017e:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_E);
20000180:	2040      	movs	r0, #64	; 0x40
20000182:	f7ff ffb9 	bl	200000f8 <ascii_ctrl_bit_set>
	*GPIO_ODR_HIGH = byte;
20000186:	4a05      	ldr	r2, [pc, #20]	; (2000019c <ascii_write_controller+0x28>)
20000188:	1dfb      	adds	r3, r7, #7
2000018a:	781b      	ldrb	r3, [r3, #0]
2000018c:	7013      	strb	r3, [r2, #0]
	delay_250_ns;
	ascii_ctrl_bit_clear(B_E);
2000018e:	2040      	movs	r0, #64	; 0x40
20000190:	f7ff ffce 	bl	20000130 <ascii_ctrl_bit_clear>
}
20000194:	46c0      	nop			; (mov r8, r8)
20000196:	46bd      	mov	sp, r7
20000198:	b002      	add	sp, #8
2000019a:	bd80      	pop	{r7, pc}
2000019c:	40021015 	andmi	r1, r2, r5, lsl r0

200001a0 <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command) {
200001a0:	b580      	push	{r7, lr}
200001a2:	b082      	sub	sp, #8
200001a4:	af00      	add	r7, sp, #0
200001a6:	0002      	movs	r2, r0
200001a8:	1dfb      	adds	r3, r7, #7
200001aa:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
200001ac:	2001      	movs	r0, #1
200001ae:	f7ff ffbf 	bl	20000130 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
200001b2:	2002      	movs	r0, #2
200001b4:	f7ff ffbc 	bl	20000130 <ascii_ctrl_bit_clear>
	ascii_write_controller(command);
200001b8:	1dfb      	adds	r3, r7, #7
200001ba:	781b      	ldrb	r3, [r3, #0]
200001bc:	0018      	movs	r0, r3
200001be:	f7ff ffd9 	bl	20000174 <ascii_write_controller>
}
200001c2:	46c0      	nop			; (mov r8, r8)
200001c4:	46bd      	mov	sp, r7
200001c6:	b002      	add	sp, #8
200001c8:	bd80      	pop	{r7, pc}

200001ca <ascii_write_data>:

void ascii_write_data(unsigned char data) {
200001ca:	b580      	push	{r7, lr}
200001cc:	b082      	sub	sp, #8
200001ce:	af00      	add	r7, sp, #0
200001d0:	0002      	movs	r2, r0
200001d2:	1dfb      	adds	r3, r7, #7
200001d4:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
200001d6:	2001      	movs	r0, #1
200001d8:	f7ff ff8e 	bl	200000f8 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
200001dc:	2002      	movs	r0, #2
200001de:	f7ff ffa7 	bl	20000130 <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
200001e2:	1dfb      	adds	r3, r7, #7
200001e4:	781b      	ldrb	r3, [r3, #0]
200001e6:	0018      	movs	r0, r3
200001e8:	f7ff ffc4 	bl	20000174 <ascii_write_controller>
}
200001ec:	46c0      	nop			; (mov r8, r8)
200001ee:	46bd      	mov	sp, r7
200001f0:	b002      	add	sp, #8
200001f2:	bd80      	pop	{r7, pc}

200001f4 <ascii_read_controller>:

unsigned char ascii_read_controller(void) {
200001f4:	b580      	push	{r7, lr}
200001f6:	b082      	sub	sp, #8
200001f8:	af00      	add	r7, sp, #0
	unsigned char return_value;
	ascii_ctrl_bit_set(B_E);
200001fa:	2040      	movs	r0, #64	; 0x40
200001fc:	f7ff ff7c 	bl	200000f8 <ascii_ctrl_bit_set>
	delay_250_ns;
	delay_250_ns;
	return_value = *GPIO_ODR_HIGH;
20000200:	4a06      	ldr	r2, [pc, #24]	; (2000021c <ascii_read_controller+0x28>)
20000202:	1dfb      	adds	r3, r7, #7
20000204:	7812      	ldrb	r2, [r2, #0]
20000206:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
20000208:	2040      	movs	r0, #64	; 0x40
2000020a:	f7ff ff91 	bl	20000130 <ascii_ctrl_bit_clear>
	return return_value;
2000020e:	1dfb      	adds	r3, r7, #7
20000210:	781b      	ldrb	r3, [r3, #0]
}
20000212:	0018      	movs	r0, r3
20000214:	46bd      	mov	sp, r7
20000216:	b002      	add	sp, #8
20000218:	bd80      	pop	{r7, pc}
2000021a:	46c0      	nop			; (mov r8, r8)
2000021c:	40021015 	andmi	r1, r2, r5, lsl r0

20000220 <ascii_read_status>:

unsigned char ascii_read_status(void) {
20000220:	b590      	push	{r4, r7, lr}
20000222:	b083      	sub	sp, #12
20000224:	af00      	add	r7, sp, #0
	unsigned char return_value;
	*GPIO_MODER &= 0x0000FFFF;
20000226:	4b0e      	ldr	r3, [pc, #56]	; (20000260 <ascii_read_status+0x40>)
20000228:	681a      	ldr	r2, [r3, #0]
2000022a:	4b0d      	ldr	r3, [pc, #52]	; (20000260 <ascii_read_status+0x40>)
2000022c:	0412      	lsls	r2, r2, #16
2000022e:	0c12      	lsrs	r2, r2, #16
20000230:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
20000232:	2001      	movs	r0, #1
20000234:	f7ff ff7c 	bl	20000130 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_set(B_RW);
20000238:	2002      	movs	r0, #2
2000023a:	f7ff ff5d 	bl	200000f8 <ascii_ctrl_bit_set>
	return_value = ascii_read_controller();
2000023e:	1dfc      	adds	r4, r7, #7
20000240:	f7ff ffd8 	bl	200001f4 <ascii_read_controller>
20000244:	0003      	movs	r3, r0
20000246:	7023      	strb	r3, [r4, #0]
	*GPIO_MODER |= 0x55550000;
20000248:	4b05      	ldr	r3, [pc, #20]	; (20000260 <ascii_read_status+0x40>)
2000024a:	681a      	ldr	r2, [r3, #0]
2000024c:	4b04      	ldr	r3, [pc, #16]	; (20000260 <ascii_read_status+0x40>)
2000024e:	4905      	ldr	r1, [pc, #20]	; (20000264 <ascii_read_status+0x44>)
20000250:	430a      	orrs	r2, r1
20000252:	601a      	str	r2, [r3, #0]
}
20000254:	46c0      	nop			; (mov r8, r8)
20000256:	0018      	movs	r0, r3
20000258:	46bd      	mov	sp, r7
2000025a:	b003      	add	sp, #12
2000025c:	bd90      	pop	{r4, r7, pc}
2000025e:	46c0      	nop			; (mov r8, r8)
20000260:	40021000 	andmi	r1, r2, r0
20000264:	55550000 	ldrbpl	r0, [r5, #-0]

20000268 <ascii_read_data>:

unsigned char ascii_read_data(void) {
20000268:	b590      	push	{r4, r7, lr}
2000026a:	b083      	sub	sp, #12
2000026c:	af00      	add	r7, sp, #0
	unsigned char return_value;
	*GPIO_MODER &= 0x0000FFFF;
2000026e:	4b0e      	ldr	r3, [pc, #56]	; (200002a8 <ascii_read_data+0x40>)
20000270:	681a      	ldr	r2, [r3, #0]
20000272:	4b0d      	ldr	r3, [pc, #52]	; (200002a8 <ascii_read_data+0x40>)
20000274:	0412      	lsls	r2, r2, #16
20000276:	0c12      	lsrs	r2, r2, #16
20000278:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
2000027a:	2001      	movs	r0, #1
2000027c:	f7ff ff3c 	bl	200000f8 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
20000280:	2002      	movs	r0, #2
20000282:	f7ff ff39 	bl	200000f8 <ascii_ctrl_bit_set>
	return_value = ascii_read_controller();
20000286:	1dfc      	adds	r4, r7, #7
20000288:	f7ff ffb4 	bl	200001f4 <ascii_read_controller>
2000028c:	0003      	movs	r3, r0
2000028e:	7023      	strb	r3, [r4, #0]
	*GPIO_MODER |= 0x55550000;
20000290:	4b05      	ldr	r3, [pc, #20]	; (200002a8 <ascii_read_data+0x40>)
20000292:	681a      	ldr	r2, [r3, #0]
20000294:	4b04      	ldr	r3, [pc, #16]	; (200002a8 <ascii_read_data+0x40>)
20000296:	4905      	ldr	r1, [pc, #20]	; (200002ac <ascii_read_data+0x44>)
20000298:	430a      	orrs	r2, r1
2000029a:	601a      	str	r2, [r3, #0]
}
2000029c:	46c0      	nop			; (mov r8, r8)
2000029e:	0018      	movs	r0, r3
200002a0:	46bd      	mov	sp, r7
200002a2:	b003      	add	sp, #12
200002a4:	bd90      	pop	{r4, r7, pc}
200002a6:	46c0      	nop			; (mov r8, r8)
200002a8:	40021000 	andmi	r1, r2, r0
200002ac:	55550000 	ldrbpl	r0, [r5, #-0]

200002b0 <ascii_init>:

void ascii_init(void) {
200002b0:	b580      	push	{r7, lr}
200002b2:	af00      	add	r7, sp, #0
	while((ascii_read_status() & 0x80) == 0x80);
200002b4:	46c0      	nop			; (mov r8, r8)
200002b6:	f7ff ffb3 	bl	20000220 <ascii_read_status>
200002ba:	0003      	movs	r3, r0
200002bc:	001a      	movs	r2, r3
200002be:	2380      	movs	r3, #128	; 0x80
200002c0:	4013      	ands	r3, r2
200002c2:	2b80      	cmp	r3, #128	; 0x80
200002c4:	d0f7      	beq.n	200002b6 <ascii_init+0x6>
	delay_micro(8);
200002c6:	2008      	movs	r0, #8
200002c8:	f7ff fed2 	bl	20000070 <delay_micro>
	ascii_write_cmd(1);
200002cc:	2001      	movs	r0, #1
200002ce:	f7ff ff67 	bl	200001a0 <ascii_write_cmd>
	delay_micro(2);
200002d2:	2002      	movs	r0, #2
200002d4:	f7ff fecc 	bl	20000070 <delay_micro>
	
	while((ascii_read_status() & 0x80) == 0x80);
200002d8:	46c0      	nop			; (mov r8, r8)
200002da:	f7ff ffa1 	bl	20000220 <ascii_read_status>
200002de:	0003      	movs	r3, r0
200002e0:	001a      	movs	r2, r3
200002e2:	2380      	movs	r3, #128	; 0x80
200002e4:	4013      	ands	r3, r2
200002e6:	2b80      	cmp	r3, #128	; 0x80
200002e8:	d0f7      	beq.n	200002da <ascii_init+0x2a>
	delay_micro(8);
200002ea:	2008      	movs	r0, #8
200002ec:	f7ff fec0 	bl	20000070 <delay_micro>
	ascii_write_cmd(0x38);
200002f0:	2038      	movs	r0, #56	; 0x38
200002f2:	f7ff ff55 	bl	200001a0 <ascii_write_cmd>
	delay_micro(40);
200002f6:	2028      	movs	r0, #40	; 0x28
200002f8:	f7ff feba 	bl	20000070 <delay_micro>
	
	while((ascii_read_status() & 0x80) == 0x80);
200002fc:	46c0      	nop			; (mov r8, r8)
200002fe:	f7ff ff8f 	bl	20000220 <ascii_read_status>
20000302:	0003      	movs	r3, r0
20000304:	001a      	movs	r2, r3
20000306:	2380      	movs	r3, #128	; 0x80
20000308:	4013      	ands	r3, r2
2000030a:	2b80      	cmp	r3, #128	; 0x80
2000030c:	d0f7      	beq.n	200002fe <ascii_init+0x4e>
	delay_micro(8);
2000030e:	2008      	movs	r0, #8
20000310:	f7ff feae 	bl	20000070 <delay_micro>
	ascii_write_cmd(0x0E);
20000314:	200e      	movs	r0, #14
20000316:	f7ff ff43 	bl	200001a0 <ascii_write_cmd>
	delay_micro(40);
2000031a:	2028      	movs	r0, #40	; 0x28
2000031c:	f7ff fea8 	bl	20000070 <delay_micro>

	while((ascii_read_status() & 0x80) == 0x80);
20000320:	46c0      	nop			; (mov r8, r8)
20000322:	f7ff ff7d 	bl	20000220 <ascii_read_status>
20000326:	0003      	movs	r3, r0
20000328:	001a      	movs	r2, r3
2000032a:	2380      	movs	r3, #128	; 0x80
2000032c:	4013      	ands	r3, r2
2000032e:	2b80      	cmp	r3, #128	; 0x80
20000330:	d0f7      	beq.n	20000322 <ascii_init+0x72>
	delay_micro(8);
20000332:	2008      	movs	r0, #8
20000334:	f7ff fe9c 	bl	20000070 <delay_micro>
	ascii_write_cmd(0x06);
20000338:	2006      	movs	r0, #6
2000033a:	f7ff ff31 	bl	200001a0 <ascii_write_cmd>
	delay_micro(40);
2000033e:	2028      	movs	r0, #40	; 0x28
20000340:	f7ff fe96 	bl	20000070 <delay_micro>
}
20000344:	46c0      	nop			; (mov r8, r8)
20000346:	46bd      	mov	sp, r7
20000348:	bd80      	pop	{r7, pc}

2000034a <ascii_gotoxy>:

void ascii_gotoxy(int row, int column) {
2000034a:	b580      	push	{r7, lr}
2000034c:	b084      	sub	sp, #16
2000034e:	af00      	add	r7, sp, #0
20000350:	6078      	str	r0, [r7, #4]
20000352:	6039      	str	r1, [r7, #0]
	int address = row - 1;
20000354:	687b      	ldr	r3, [r7, #4]
20000356:	3b01      	subs	r3, #1
20000358:	60fb      	str	r3, [r7, #12]
	if (column == 2) {
2000035a:	683b      	ldr	r3, [r7, #0]
2000035c:	2b02      	cmp	r3, #2
2000035e:	d102      	bne.n	20000366 <ascii_gotoxy+0x1c>
		address += 0x40;
20000360:	68fb      	ldr	r3, [r7, #12]
20000362:	3340      	adds	r3, #64	; 0x40
20000364:	60fb      	str	r3, [r7, #12]
	}
	ascii_write_cmd(0x80 | address);
20000366:	68fb      	ldr	r3, [r7, #12]
20000368:	b25b      	sxtb	r3, r3
2000036a:	2280      	movs	r2, #128	; 0x80
2000036c:	4252      	negs	r2, r2
2000036e:	4313      	orrs	r3, r2
20000370:	b25b      	sxtb	r3, r3
20000372:	b2db      	uxtb	r3, r3
20000374:	0018      	movs	r0, r3
20000376:	f7ff ff13 	bl	200001a0 <ascii_write_cmd>
}
2000037a:	46c0      	nop			; (mov r8, r8)
2000037c:	46bd      	mov	sp, r7
2000037e:	b004      	add	sp, #16
20000380:	bd80      	pop	{r7, pc}

20000382 <ascii_write_char>:

void ascii_write_char(unsigned char c) {
20000382:	b580      	push	{r7, lr}
20000384:	b082      	sub	sp, #8
20000386:	af00      	add	r7, sp, #0
20000388:	0002      	movs	r2, r0
2000038a:	1dfb      	adds	r3, r7, #7
2000038c:	701a      	strb	r2, [r3, #0]
	while((ascii_read_status() & 0x80) == 0x80);
2000038e:	46c0      	nop			; (mov r8, r8)
20000390:	f7ff ff46 	bl	20000220 <ascii_read_status>
20000394:	0003      	movs	r3, r0
20000396:	001a      	movs	r2, r3
20000398:	2380      	movs	r3, #128	; 0x80
2000039a:	4013      	ands	r3, r2
2000039c:	2b80      	cmp	r3, #128	; 0x80
2000039e:	d0f7      	beq.n	20000390 <ascii_write_char+0xe>
	delay_micro(8);
200003a0:	2008      	movs	r0, #8
200003a2:	f7ff fe65 	bl	20000070 <delay_micro>
	ascii_write_data(c);
200003a6:	1dfb      	adds	r3, r7, #7
200003a8:	781b      	ldrb	r3, [r3, #0]
200003aa:	0018      	movs	r0, r3
200003ac:	f7ff ff0d 	bl	200001ca <ascii_write_data>
	delay_micro(45);
200003b0:	202d      	movs	r0, #45	; 0x2d
200003b2:	f7ff fe5d 	bl	20000070 <delay_micro>
}
200003b6:	46c0      	nop			; (mov r8, r8)
200003b8:	46bd      	mov	sp, r7
200003ba:	b002      	add	sp, #8
200003bc:	bd80      	pop	{r7, pc}

200003be <main>:

void main(void)
{
200003be:	b5b0      	push	{r4, r5, r7, lr}
200003c0:	b08a      	sub	sp, #40	; 0x28
200003c2:	af00      	add	r7, sp, #0
	char *s;
	char test1[] = "Alfanumerisk";
200003c4:	2414      	movs	r4, #20
200003c6:	193b      	adds	r3, r7, r4
200003c8:	4a1b      	ldr	r2, [pc, #108]	; (20000438 <main+0x7a>)
200003ca:	ca23      	ldmia	r2!, {r0, r1, r5}
200003cc:	c323      	stmia	r3!, {r0, r1, r5}
200003ce:	7812      	ldrb	r2, [r2, #0]
200003d0:	701a      	strb	r2, [r3, #0]
	char test2[] = "Display-test";
200003d2:	1d3b      	adds	r3, r7, #4
200003d4:	4a19      	ldr	r2, [pc, #100]	; (2000043c <main+0x7e>)
200003d6:	ca23      	ldmia	r2!, {r0, r1, r5}
200003d8:	c323      	stmia	r3!, {r0, r1, r5}
200003da:	7812      	ldrb	r2, [r2, #0]
200003dc:	701a      	strb	r2, [r3, #0]
	
	app_init();
200003de:	f7ff fe17 	bl	20000010 <app_init>
	ascii_init();
200003e2:	f7ff ff65 	bl	200002b0 <ascii_init>
	ascii_gotoxy(1,1);
200003e6:	2101      	movs	r1, #1
200003e8:	2001      	movs	r0, #1
200003ea:	f7ff ffae 	bl	2000034a <ascii_gotoxy>
	s = test1;
200003ee:	193b      	adds	r3, r7, r4
200003f0:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s) {
200003f2:	e006      	b.n	20000402 <main+0x44>
		ascii_write_char(*s++);
200003f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003f6:	1c5a      	adds	r2, r3, #1
200003f8:	627a      	str	r2, [r7, #36]	; 0x24
200003fa:	781b      	ldrb	r3, [r3, #0]
200003fc:	0018      	movs	r0, r3
200003fe:	f7ff ffc0 	bl	20000382 <ascii_write_char>
	while(*s) {
20000402:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000404:	781b      	ldrb	r3, [r3, #0]
20000406:	2b00      	cmp	r3, #0
20000408:	d1f4      	bne.n	200003f4 <main+0x36>
	}
	ascii_gotoxy(1,2);
2000040a:	2102      	movs	r1, #2
2000040c:	2001      	movs	r0, #1
2000040e:	f7ff ff9c 	bl	2000034a <ascii_gotoxy>
	s = test2;
20000412:	1d3b      	adds	r3, r7, #4
20000414:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s) {
20000416:	e006      	b.n	20000426 <main+0x68>
		ascii_write_char(*s++);
20000418:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000041a:	1c5a      	adds	r2, r3, #1
2000041c:	627a      	str	r2, [r7, #36]	; 0x24
2000041e:	781b      	ldrb	r3, [r3, #0]
20000420:	0018      	movs	r0, r3
20000422:	f7ff ffae 	bl	20000382 <ascii_write_char>
	while(*s) {
20000426:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000428:	781b      	ldrb	r3, [r3, #0]
2000042a:	2b00      	cmp	r3, #0
2000042c:	d1f4      	bne.n	20000418 <main+0x5a>
	}
	return 0;
2000042e:	46c0      	nop			; (mov r8, r8)
}
20000430:	46bd      	mov	sp, r7
20000432:	b00a      	add	sp, #40	; 0x28
20000434:	bdb0      	pop	{r4, r5, r7, pc}
20000436:	46c0      	nop			; (mov r8, r8)
20000438:	20000558 	andcs	r0, r0, r8, asr r5
2000043c:	20000568 	andcs	r0, r0, r8, ror #10

20000440 <__udivsi3>:
20000440:	2200      	movs	r2, #0
20000442:	0843      	lsrs	r3, r0, #1
20000444:	428b      	cmp	r3, r1
20000446:	d374      	bcc.n	20000532 <__udivsi3+0xf2>
20000448:	0903      	lsrs	r3, r0, #4
2000044a:	428b      	cmp	r3, r1
2000044c:	d35f      	bcc.n	2000050e <__udivsi3+0xce>
2000044e:	0a03      	lsrs	r3, r0, #8
20000450:	428b      	cmp	r3, r1
20000452:	d344      	bcc.n	200004de <__udivsi3+0x9e>
20000454:	0b03      	lsrs	r3, r0, #12
20000456:	428b      	cmp	r3, r1
20000458:	d328      	bcc.n	200004ac <__udivsi3+0x6c>
2000045a:	0c03      	lsrs	r3, r0, #16
2000045c:	428b      	cmp	r3, r1
2000045e:	d30d      	bcc.n	2000047c <__udivsi3+0x3c>
20000460:	22ff      	movs	r2, #255	; 0xff
20000462:	0209      	lsls	r1, r1, #8
20000464:	ba12      	rev	r2, r2
20000466:	0c03      	lsrs	r3, r0, #16
20000468:	428b      	cmp	r3, r1
2000046a:	d302      	bcc.n	20000472 <__udivsi3+0x32>
2000046c:	1212      	asrs	r2, r2, #8
2000046e:	0209      	lsls	r1, r1, #8
20000470:	d065      	beq.n	2000053e <__udivsi3+0xfe>
20000472:	0b03      	lsrs	r3, r0, #12
20000474:	428b      	cmp	r3, r1
20000476:	d319      	bcc.n	200004ac <__udivsi3+0x6c>
20000478:	e000      	b.n	2000047c <__udivsi3+0x3c>
2000047a:	0a09      	lsrs	r1, r1, #8
2000047c:	0bc3      	lsrs	r3, r0, #15
2000047e:	428b      	cmp	r3, r1
20000480:	d301      	bcc.n	20000486 <__udivsi3+0x46>
20000482:	03cb      	lsls	r3, r1, #15
20000484:	1ac0      	subs	r0, r0, r3
20000486:	4152      	adcs	r2, r2
20000488:	0b83      	lsrs	r3, r0, #14
2000048a:	428b      	cmp	r3, r1
2000048c:	d301      	bcc.n	20000492 <__udivsi3+0x52>
2000048e:	038b      	lsls	r3, r1, #14
20000490:	1ac0      	subs	r0, r0, r3
20000492:	4152      	adcs	r2, r2
20000494:	0b43      	lsrs	r3, r0, #13
20000496:	428b      	cmp	r3, r1
20000498:	d301      	bcc.n	2000049e <__udivsi3+0x5e>
2000049a:	034b      	lsls	r3, r1, #13
2000049c:	1ac0      	subs	r0, r0, r3
2000049e:	4152      	adcs	r2, r2
200004a0:	0b03      	lsrs	r3, r0, #12
200004a2:	428b      	cmp	r3, r1
200004a4:	d301      	bcc.n	200004aa <__udivsi3+0x6a>
200004a6:	030b      	lsls	r3, r1, #12
200004a8:	1ac0      	subs	r0, r0, r3
200004aa:	4152      	adcs	r2, r2
200004ac:	0ac3      	lsrs	r3, r0, #11
200004ae:	428b      	cmp	r3, r1
200004b0:	d301      	bcc.n	200004b6 <__udivsi3+0x76>
200004b2:	02cb      	lsls	r3, r1, #11
200004b4:	1ac0      	subs	r0, r0, r3
200004b6:	4152      	adcs	r2, r2
200004b8:	0a83      	lsrs	r3, r0, #10
200004ba:	428b      	cmp	r3, r1
200004bc:	d301      	bcc.n	200004c2 <__udivsi3+0x82>
200004be:	028b      	lsls	r3, r1, #10
200004c0:	1ac0      	subs	r0, r0, r3
200004c2:	4152      	adcs	r2, r2
200004c4:	0a43      	lsrs	r3, r0, #9
200004c6:	428b      	cmp	r3, r1
200004c8:	d301      	bcc.n	200004ce <__udivsi3+0x8e>
200004ca:	024b      	lsls	r3, r1, #9
200004cc:	1ac0      	subs	r0, r0, r3
200004ce:	4152      	adcs	r2, r2
200004d0:	0a03      	lsrs	r3, r0, #8
200004d2:	428b      	cmp	r3, r1
200004d4:	d301      	bcc.n	200004da <__udivsi3+0x9a>
200004d6:	020b      	lsls	r3, r1, #8
200004d8:	1ac0      	subs	r0, r0, r3
200004da:	4152      	adcs	r2, r2
200004dc:	d2cd      	bcs.n	2000047a <__udivsi3+0x3a>
200004de:	09c3      	lsrs	r3, r0, #7
200004e0:	428b      	cmp	r3, r1
200004e2:	d301      	bcc.n	200004e8 <__udivsi3+0xa8>
200004e4:	01cb      	lsls	r3, r1, #7
200004e6:	1ac0      	subs	r0, r0, r3
200004e8:	4152      	adcs	r2, r2
200004ea:	0983      	lsrs	r3, r0, #6
200004ec:	428b      	cmp	r3, r1
200004ee:	d301      	bcc.n	200004f4 <__udivsi3+0xb4>
200004f0:	018b      	lsls	r3, r1, #6
200004f2:	1ac0      	subs	r0, r0, r3
200004f4:	4152      	adcs	r2, r2
200004f6:	0943      	lsrs	r3, r0, #5
200004f8:	428b      	cmp	r3, r1
200004fa:	d301      	bcc.n	20000500 <__udivsi3+0xc0>
200004fc:	014b      	lsls	r3, r1, #5
200004fe:	1ac0      	subs	r0, r0, r3
20000500:	4152      	adcs	r2, r2
20000502:	0903      	lsrs	r3, r0, #4
20000504:	428b      	cmp	r3, r1
20000506:	d301      	bcc.n	2000050c <__udivsi3+0xcc>
20000508:	010b      	lsls	r3, r1, #4
2000050a:	1ac0      	subs	r0, r0, r3
2000050c:	4152      	adcs	r2, r2
2000050e:	08c3      	lsrs	r3, r0, #3
20000510:	428b      	cmp	r3, r1
20000512:	d301      	bcc.n	20000518 <__udivsi3+0xd8>
20000514:	00cb      	lsls	r3, r1, #3
20000516:	1ac0      	subs	r0, r0, r3
20000518:	4152      	adcs	r2, r2
2000051a:	0883      	lsrs	r3, r0, #2
2000051c:	428b      	cmp	r3, r1
2000051e:	d301      	bcc.n	20000524 <__udivsi3+0xe4>
20000520:	008b      	lsls	r3, r1, #2
20000522:	1ac0      	subs	r0, r0, r3
20000524:	4152      	adcs	r2, r2
20000526:	0843      	lsrs	r3, r0, #1
20000528:	428b      	cmp	r3, r1
2000052a:	d301      	bcc.n	20000530 <__udivsi3+0xf0>
2000052c:	004b      	lsls	r3, r1, #1
2000052e:	1ac0      	subs	r0, r0, r3
20000530:	4152      	adcs	r2, r2
20000532:	1a41      	subs	r1, r0, r1
20000534:	d200      	bcs.n	20000538 <__udivsi3+0xf8>
20000536:	4601      	mov	r1, r0
20000538:	4152      	adcs	r2, r2
2000053a:	4610      	mov	r0, r2
2000053c:	4770      	bx	lr
2000053e:	e7ff      	b.n	20000540 <__udivsi3+0x100>
20000540:	b501      	push	{r0, lr}
20000542:	2000      	movs	r0, #0
20000544:	f000 f806 	bl	20000554 <__aeabi_idiv0>
20000548:	bd02      	pop	{r1, pc}
2000054a:	46c0      	nop			; (mov r8, r8)

2000054c <__aeabi_uidivmod>:
2000054c:	2900      	cmp	r1, #0
2000054e:	d0f7      	beq.n	20000540 <__udivsi3+0x100>
20000550:	e776      	b.n	20000440 <__udivsi3>
20000552:	4770      	bx	lr

20000554 <__aeabi_idiv0>:
20000554:	4770      	bx	lr
20000556:	46c0      	nop			; (mov r8, r8)
20000558:	61666c41 	cmnvs	r6, r1, asr #24
2000055c:	656d756e 	strbvs	r7, [sp, #-1390]!	; 0xfffffa92
20000560:	6b736972 	blvs	21cdab30 <__aeabi_idiv0+0x1cda5dc>
20000564:	00000000 	andeq	r0, r0, r0
20000568:	70736944 	rsbsvc	r6, r3, r4, asr #18
2000056c:	2d79616c 	ldfcse	f6, [r9, #-432]!	; 0xfffffe50
20000570:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
20000574:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000002fd 	strdeq	r0, [r0], -sp
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000078 	andeq	r0, r0, r8, ror r0
  10:	0001d50c 	andeq	sp, r1, ip, lsl #10
  14:	00018400 	andeq	r8, r1, r0, lsl #8
	...
  24:	01490200 	mrseq	r0, (UNDEF: 105)
  28:	ab010000 	blge	40030 <startup-0x1ffbffd0>
  2c:	0003be06 	andeq	fp, r3, r6, lsl #28
  30:	00008220 	andeq	r8, r0, r0, lsr #4
  34:	679c0100 	ldrvs	r0, [ip, r0, lsl #2]
  38:	03000000 	movweq	r0, #0
  3c:	ad010073 	stcge	0, cr0, [r1, #-460]	; 0xfffffe34
  40:	00006708 	andeq	r6, r0, r8, lsl #14
  44:	6c910200 	lfmvs	f0, 4, [r1], {0}
  48:	00017804 	andeq	r7, r1, r4, lsl #16
  4c:	07ae0100 	streq	r0, [lr, r0, lsl #2]!
  50:	00000074 	andeq	r0, r0, r4, ror r0
  54:	045c9102 	ldrbeq	r9, [ip], #-258	; 0xfffffefe
  58:	0000017e 	andeq	r0, r0, lr, ror r1
  5c:	7407af01 	strvc	sl, [r7], #-3841	; 0xfffff0ff
  60:	02000000 	andeq	r0, r0, #0
  64:	05004c91 	streq	r4, [r0, #-3217]	; 0xfffff36f
  68:	00006d04 	andeq	r6, r0, r4, lsl #26
  6c:	08010600 	stmdaeq	r1, {r9, sl}
  70:	00000144 	andeq	r0, r0, r4, asr #2
  74:	00006d07 	andeq	r6, r0, r7, lsl #26
  78:	00008400 	andeq	r8, r0, r0, lsl #8
  7c:	00840800 	addeq	r0, r4, r0, lsl #16
  80:	000c0000 	andeq	r0, ip, r0
  84:	19070406 	stmdbne	r7, {r1, r2, sl}
  88:	02000000 	andeq	r0, r0, #0
  8c:	0000022d 	andeq	r0, r0, sp, lsr #4
  90:	8206a401 	andhi	sl, r6, #16777216	; 0x1000000
  94:	3c200003 	stccc	0, cr0, [r0], #-12
  98:	01000000 	mrseq	r0, (UNDEF: 0)
  9c:	0000af9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
  a0:	00630900 	rsbeq	r0, r3, r0, lsl #18
  a4:	af25a401 	svcge	0x0025a401
  a8:	02000000 	andeq	r0, r0, #0
  ac:	06007791 			; <UNDEFINED> instruction: 0x06007791
  b0:	013b0801 	teqeq	fp, r1, lsl #16
  b4:	0c020000 	stceq	0, cr0, [r2], {-0}
  b8:	01000000 	mrseq	r0, (UNDEF: 0)
  bc:	034a069c 	movteq	r0, #42652	; 0xa69c
  c0:	00382000 	eorseq	r2, r8, r0
  c4:	9c010000 	stcls	0, cr0, [r1], {-0}
  c8:	000000fa 	strdeq	r0, [r0], -sl
  cc:	776f7209 	strbvc	r7, [pc, -r9, lsl #4]!
  d0:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
  d4:	000000fa 	strdeq	r0, [r0], -sl
  d8:	0a6c9102 	beq	1b244e8 <startup-0x1e4dbb18>
  dc:	000001ce 	andeq	r0, r0, lr, asr #3
  e0:	fa209c01 	blx	8270ec <startup-0x1f7d8f14>
  e4:	02000000 	andeq	r0, r0, #0
  e8:	17046891 			; <UNDEFINED> instruction: 0x17046891
  ec:	01000001 	tsteq	r0, r1
  f0:	00fa069d 	smlalseq	r0, sl, sp, r6
  f4:	91020000 	mrsls	r0, (UNDEF: 2)
  f8:	040b0074 	streq	r0, [fp], #-116	; 0xffffff8c
  fc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
 100:	02510c00 	subseq	r0, r1, #0, 24
 104:	86010000 	strhi	r0, [r1], -r0
 108:	0002b006 	andeq	fp, r2, r6
 10c:	00009a20 	andeq	r9, r0, r0, lsr #20
 110:	0d9c0100 	ldfeqs	f0, [ip]
 114:	0000011f 	andeq	r0, r0, pc, lsl r1
 118:	af0f7d01 	svcge	0x000f7d01
 11c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
 120:	48200002 	stmdami	r0!, {r1}
 124:	01000000 	mrseq	r0, (UNDEF: 0)
 128:	00013d9c 	muleq	r1, ip, sp
 12c:	016b0400 	cmneq	fp, r0, lsl #8
 130:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
 134:	0000af10 	andeq	sl, r0, r0, lsl pc
 138:	6f910200 	svcvs	0x00910200
 13c:	00f40d00 	rscseq	r0, r4, r0, lsl #26
 140:	74010000 	strvc	r0, [r1], #-0
 144:	0000af0f 	andeq	sl, r0, pc, lsl #30
 148:	00022000 	andeq	r2, r2, r0
 14c:	00004820 	andeq	r4, r0, r0, lsr #16
 150:	679c0100 	ldrvs	r0, [ip, r0, lsl #2]
 154:	04000001 	streq	r0, [r0], #-1
 158:	0000016b 	andeq	r0, r0, fp, ror #2
 15c:	af107501 	svcge	0x00107501
 160:	02000000 	andeq	r0, r0, #0
 164:	0d006f91 	stceq	15, cr6, [r0, #-580]	; 0xfffffdbc
 168:	0000003b 	andeq	r0, r0, fp, lsr r0
 16c:	af0f6a01 	svcge	0x000f6a01
 170:	f4000000 	vst4.8	{d0-d3}, [r0], r0
 174:	2c200001 	stccs	0, cr0, [r0], #-4
 178:	01000000 	mrseq	r0, (UNDEF: 0)
 17c:	0001919c 	muleq	r1, ip, r1
 180:	016b0400 	cmneq	fp, r0, lsl #8
 184:	6b010000 	blvs	4018c <startup-0x1ffbfe74>
 188:	0000af10 	andeq	sl, r0, r0, lsl pc
 18c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 190:	01060200 	mrseq	r0, LR_usr
 194:	64010000 	strvs	r0, [r1], #-0
 198:	0001ca06 	andeq	ip, r1, r6, lsl #20
 19c:	00002a20 	andeq	r2, r0, r0, lsr #20
 1a0:	b79c0100 	ldrlt	r0, [ip, r0, lsl #2]
 1a4:	0a000001 	beq	1b0 <startup-0x1ffffe50>
 1a8:	0000012a 	andeq	r0, r0, sl, lsr #2
 1ac:	af256401 	svcge	0x00256401
 1b0:	02000000 	andeq	r0, r0, #0
 1b4:	02007791 	andeq	r7, r0, #38010880	; 0x2440000
 1b8:	00000156 	andeq	r0, r0, r6, asr r1
 1bc:	a0065e01 	andge	r5, r6, r1, lsl #28
 1c0:	2a200001 	bcs	8001cc <startup-0x1f7ffe34>
 1c4:	01000000 	mrseq	r0, (UNDEF: 0)
 1c8:	0001dd9c 	muleq	r1, ip, sp
 1cc:	014e0a00 	cmpeq	lr, r0, lsl #20
 1d0:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
 1d4:	0000af24 	andeq	sl, r0, r4, lsr #30
 1d8:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 1dc:	00510200 	subseq	r0, r1, r0, lsl #4
 1e0:	57010000 	strpl	r0, [r1, -r0]
 1e4:	00017406 	andeq	r7, r1, r6, lsl #8
 1e8:	00002c20 	andeq	r2, r0, r0, lsr #24
 1ec:	039c0100 	orrseq	r0, ip, #0, 2
 1f0:	0a000002 	beq	200 <startup-0x1ffffe00>
 1f4:	00000166 	andeq	r0, r0, r6, ror #2
 1f8:	af2b5701 	svcge	0x002b5701
 1fc:	02000000 	andeq	r0, r0, #0
 200:	0e007791 	mcreq	7, 0, r7, cr0, cr1, {4}
 204:	00000026 	andeq	r0, r0, r6, lsr #32
 208:	30065201 	andcc	r5, r6, r1, lsl #4
 20c:	44200001 	strtmi	r0, [r0], #-1
 210:	01000000 	mrseq	r0, (UNDEF: 0)
 214:	0002369c 	muleq	r2, ip, r6
 218:	00630900 	rsbeq	r0, r3, r0, lsl #18
 21c:	af295201 	svcge	0x00295201
 220:	02000000 	andeq	r0, r0, #0
 224:	68046f91 	stmdavs	r4, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
 228:	01000000 	mrseq	r0, (UNDEF: 0)
 22c:	00af1053 	adceq	r1, pc, r3, asr r0	; <UNPREDICTABLE>
 230:	91020000 	mrsls	r0, (UNDEF: 2)
 234:	3e0e0077 	mcrcc	0, 0, r0, cr14, cr7, {3}
 238:	01000002 	tsteq	r0, r2
 23c:	00f8064d 	rscseq	r0, r8, sp, asr #12
 240:	00382000 	eorseq	r2, r8, r0
 244:	9c010000 	stcls	0, cr0, [r1], {-0}
 248:	00000269 	andeq	r0, r0, r9, ror #4
 24c:	01006309 	tsteq	r0, r9, lsl #6
 250:	00af274d 	adceq	r2, pc, sp, asr #14
 254:	91020000 	mrsls	r0, (UNDEF: 2)
 258:	0068046f 	rsbeq	r0, r8, pc, ror #8
 25c:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
 260:	0000af10 	andeq	sl, r0, r0, lsl pc
 264:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 268:	00000200 	andeq	r0, r0, r0, lsl #4
 26c:	41010000 	mrsmi	r0, (UNDEF: 1)
 270:	0000b806 	andeq	fp, r0, r6, lsl #16
 274:	00004020 	andeq	r4, r0, r0, lsr #32
 278:	8e9c0100 	fmlhie	f0, f4, f0
 27c:	09000002 	stmdbeq	r0, {r1}
 280:	0100736d 	tsteq	r0, sp, ror #6
 284:	00841f41 	addeq	r1, r4, r1, asr #30
 288:	91020000 	mrsls	r0, (UNDEF: 2)
 28c:	2f020074 	svccs	0x00020074
 290:	01000001 	tsteq	r0, r1
 294:	00700633 	rsbseq	r0, r0, r3, lsr r6
 298:	00482000 	subeq	r2, r8, r0
 29c:	9c010000 	stcls	0, cr0, [r1], {-0}
 2a0:	000002ca 	andeq	r0, r0, sl, asr #5
 2a4:	00736d09 	rsbseq	r6, r3, r9, lsl #26
 2a8:	841f3301 	ldrhi	r3, [pc], #-769	; 2b0 <startup-0x1ffffd50>
 2ac:	02000000 	andeq	r0, r0, #0
 2b0:	900f6c91 	mulls	pc, r1, ip	; <UNPREDICTABLE>
 2b4:	12200000 	eorne	r0, r0, #0
 2b8:	03000000 	movweq	r0, #0
 2bc:	3a010069 	bcc	40468 <startup-0x1ffbfb98>
 2c0:	0000fa0b 	andeq	pc, r0, fp, lsl #20
 2c4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 2c8:	20100000 	andscs	r0, r0, r0
 2cc:	01000002 	tsteq	r0, r2
 2d0:	0038062a 	eorseq	r0, r8, sl, lsr #12
 2d4:	00382000 	eorseq	r2, r8, r0
 2d8:	9c010000 	stcls	0, cr0, [r1], {-0}
 2dc:	0001c511 	andeq	ip, r1, r1, lsl r5
 2e0:	06230100 	strteq	r0, [r3], -r0, lsl #2
 2e4:	20000010 	andcs	r0, r0, r0, lsl r0
 2e8:	00000028 	andeq	r0, r0, r8, lsr #32
 2ec:	70109c01 	andsvc	r9, r0, r1, lsl #24
 2f0:	01000000 	mrseq	r0, (UNDEF: 0)
 2f4:	0000061b 	andeq	r0, r0, fp, lsl r6
 2f8:	000c2000 	andeq	r2, ip, r0
 2fc:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	01194296 			; <UNDEFINED> instruction: 0x01194296
  2c:	03000013 	movweq	r0, #19
  30:	08030034 	stmdaeq	r3, {r2, r4, r5}
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	13490b39 	movtne	r0, #39737	; 0x9b39
  3c:	00001802 	andeq	r1, r0, r2, lsl #16
  40:	03003404 	movweq	r3, #1028	; 0x404
  44:	3b0b3a0e 	blcc	2ce884 <startup-0x1fd3177c>
  48:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  4c:	00180213 	andseq	r0, r8, r3, lsl r2
  50:	000f0500 	andeq	r0, pc, r0, lsl #10
  54:	13490b0b 	movtne	r0, #39691	; 0x9b0b
  58:	24060000 	strcs	r0, [r6], #-0
  5c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  60:	000e030b 	andeq	r0, lr, fp, lsl #6
  64:	01010700 	tsteq	r1, r0, lsl #14
  68:	13011349 	movwne	r1, #4937	; 0x1349
  6c:	21080000 	mrscs	r0, (UNDEF: 8)
  70:	2f134900 	svccs	0x00134900
  74:	0900000b 	stmdbeq	r0, {r0, r1, r3}
  78:	08030005 	stmdaeq	r3, {r0, r2}
  7c:	0b3b0b3a 	bleq	ec2d6c <startup-0x1f13d294>
  80:	13490b39 	movtne	r0, #39737	; 0x9b39
  84:	00001802 	andeq	r1, r0, r2, lsl #16
  88:	0300050a 	movweq	r0, #1290	; 0x50a
  8c:	3b0b3a0e 	blcc	2ce8cc <startup-0x1fd31734>
  90:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  94:	00180213 	andseq	r0, r8, r3, lsl r2
  98:	00240b00 	eoreq	r0, r4, r0, lsl #22
  9c:	0b3e0b0b 	bleq	f82cd0 <startup-0x1f07d330>
  a0:	00000803 	andeq	r0, r0, r3, lsl #16
  a4:	3f002e0c 	svccc	0x00002e0c
  a8:	3a0e0319 	bcc	380d14 <startup-0x1fc7f2ec>
  ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  b0:	1119270b 	tstne	r9, fp, lsl #14
  b4:	40061201 	andmi	r1, r6, r1, lsl #4
  b8:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  bc:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
  c0:	03193f01 	tsteq	r9, #1, 30
  c4:	3b0b3a0e 	blcc	2ce904 <startup-0x1fd316fc>
  c8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  cc:	11134919 	tstne	r3, r9, lsl r9
  d0:	40061201 	andmi	r1, r6, r1, lsl #4
  d4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  d8:	00001301 	andeq	r1, r0, r1, lsl #6
  dc:	3f012e0e 	svccc	0x00012e0e
  e0:	3a0e0319 	bcc	380d4c <startup-0x1fc7f2b4>
  e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  e8:	1119270b 	tstne	r9, fp, lsl #14
  ec:	40061201 	andmi	r1, r6, r1, lsl #4
  f0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  f4:	00001301 	andeq	r1, r0, r1, lsl #6
  f8:	11010b0f 	tstne	r1, pc, lsl #22
  fc:	00061201 	andeq	r1, r6, r1, lsl #4
 100:	002e1000 	eoreq	r1, lr, r0
 104:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 108:	0b3b0b3a 	bleq	ec2df8 <startup-0x1f13d208>
 10c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 110:	06120111 			; <UNDEFINED> instruction: 0x06120111
 114:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 118:	11000019 	tstne	r0, r9, lsl r0
 11c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 120:	0b3a0e03 	bleq	e83934 <startup-0x1f17c6cc>
 124:	0b390b3b 	bleq	e42e18 <startup-0x1f1bd1e8>
 128:	06120111 			; <UNDEFINED> instruction: 0x06120111
 12c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 130:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000430 	andeq	r0, r0, r0, lsr r4
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000440 	andcs	r0, r0, r0, asr #8
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000275 	andeq	r0, r0, r5, ror r2
   4:	00610003 	rsbeq	r0, r1, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
  28:	6e4f2f73 	mcrvs	15, 2, r2, cr15, cr3, {3}
  2c:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
  30:	432f6576 			; <UNDEFINED> instruction: 0x432f6576
  34:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
  38:	2f737265 	svccs	0x00737265
  3c:	30544144 	subscc	r4, r4, r4, asr #2
  40:	4c2f3731 	stcmi	7, cr3, [pc], #-196	; ffffff84 <__aeabi_idiv0+0xdffffa30>
  44:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  48:	6f697461 	svcvs	0x00697461
  4c:	612f326e 			; <UNDEFINED> instruction: 0x612f326e
  50:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  54:	70736964 	rsbsvc	r6, r3, r4, ror #18
  58:	0079616c 	rsbseq	r6, r9, ip, ror #2
  5c:	61747300 	cmnvs	r4, r0, lsl #6
  60:	70757472 	rsbsvc	r7, r5, r2, ror r4
  64:	0100632e 	tsteq	r0, lr, lsr #6
  68:	05000000 	streq	r0, [r0, #-0]
  6c:	02050001 	andeq	r0, r5, #1
  70:	20000000 	andcs	r0, r0, r0
  74:	13011b03 	movwne	r1, #6915	; 0x1b03
  78:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
  7c:	01000302 	tsteq	r0, r2, lsl #6
  80:	00110501 	andseq	r0, r1, r1, lsl #10
  84:	00100205 	andseq	r0, r0, r5, lsl #4
  88:	22032000 	andcs	r2, r3, #0
  8c:	2f0e0501 	svccs	0x000e0501
  90:	67010559 	smlsdvs	r1, r9, r5, r0
  94:	05781905 	ldrbeq	r1, [r8, #-2309]!	; 0xfffff6fb
  98:	0c052f02 	stceq	15, cr2, [r5], {2}
  9c:	2f020520 	svccs	0x00020520
  a0:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
  a4:	0b052f02 	bleq	14bcb4 <startup-0x1feb434c>
  a8:	2f020520 	svccs	0x00020520
  ac:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
  b0:	02052f07 	andeq	r2, r5, #7, 30
  b4:	200c0521 	andcs	r0, ip, r1, lsr #10
  b8:	052f0105 	streq	r0, [pc, #-261]!	; ffffffbb <__aeabi_idiv0+0xdffffa67>
  bc:	0605a023 	streq	sl, [r5], -r3, lsr #32
  c0:	8305054c 	movwhi	r0, #21836	; 0x554c
  c4:	053f0705 	ldreq	r0, [pc, #-1797]!	; fffff9c7 <__aeabi_idiv0+0xdffff473>
  c8:	0305210b 	movweq	r2, #20747	; 0x510b
  cc:	001a052e 	andseq	r0, sl, lr, lsr #10
  d0:	20030402 	andcs	r0, r3, r2, lsl #8
  d4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
  d8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
  dc:	07053f05 	streq	r3, [r5, -r5, lsl #30]
  e0:	42010538 	andmi	r0, r1, #56, 10	; 0xe000000
  e4:	055a2305 	ldrbeq	r2, [sl, #-773]	; 0xfffffcfb
  e8:	05054c06 	streq	r4, [r5, #-3078]	; 0xfffff3fa
  ec:	3f070583 	svccc	0x00070583
  f0:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
  f4:	07055905 	streq	r5, [r5, -r5, lsl #18]
  f8:	4001053a 	andmi	r0, r1, sl, lsr r5
  fc:	055a2a05 	ldrbeq	r2, [sl, #-2565]	; 0xfffff5fb
 100:	1005671a 	andne	r6, r5, sl, lsl r7
 104:	02054b20 	andeq	r4, r5, #32, 22	; 0x8000
 108:	20100566 	andscs	r0, r0, r6, ror #10
 10c:	054b0105 	strbeq	r0, [fp, #-261]	; 0xfffffefb
 110:	1a05682c 	bne	15a1c8 <startup-0x1fea5e38>
 114:	20100567 	andscs	r0, r0, r7, ror #10
 118:	054b2605 	strbeq	r2, [fp, #-1541]	; 0xfffff9fb
 11c:	02059e1b 	andeq	r9, r5, #432	; 0x1b0
 120:	201b053c 	andscs	r0, fp, ip, lsr r5
 124:	05201005 	streq	r1, [r0, #-5]!
 128:	31052101 	tstcc	r5, r1, lsl #2
 12c:	67020576 	smlsdxvs	r2, r6, r5, r0
 130:	2011053d 	andscs	r0, r1, sp, lsr r5
 134:	053e0205 	ldreq	r0, [lr, #-517]!	; 0xfffffdfb
 138:	2d053d01 	stccs	13, cr3, [r5, #-4]
 13c:	67020568 	strvs	r0, [r2, -r8, ror #10]
 140:	01053d3d 	tsteq	r5, sp, lsr sp
 144:	4c2b0559 	cfstr32mi	mvfx0, [fp], #-356	; 0xfffffe9c
 148:	3d670205 	sfmcc	f0, 2, [r7, #-20]!	; 0xffffffec
 14c:	5901053d 	stmdbpl	r1, {r0, r2, r3, r4, r5, r8, sl}
 150:	054c2b05 	strbeq	r2, [ip, #-2821]	; 0xfffff4fb
 154:	11053e02 	tstne	r5, r2, lsl #28
 158:	200f053f 	andcs	r0, pc, pc, lsr r5	; <UNPREDICTABLE>
 15c:	053d0205 	ldreq	r0, [sp, #-517]!	; 0xfffffdfb
 160:	01053d09 	tsteq	r5, r9, lsl #26
 164:	7627052f 	strtvc	r0, [r7], -pc, lsr #10
 168:	053e0e05 	ldreq	r0, [lr, #-3589]!	; 0xfffff1fb
 16c:	053d6702 	ldreq	r6, [sp, #-1794]!	; 0xfffff8fe
 170:	0e053d11 	mcreq	13, 0, r3, cr5, cr1, {0}
 174:	67010559 	smlsdvs	r1, r9, r5, r0
 178:	05a02505 	streq	r2, [r0, #1285]!	; 0x505
 17c:	02053e0e 	andeq	r3, r5, #14, 28	; 0xe0
 180:	11053d67 	tstne	r5, r7, ror #26
 184:	590e053d 	stmdbpl	lr, {r0, r2, r3, r4, r5, r8, sl}
 188:	05670105 	strbeq	r0, [r7, #-261]!	; 0xfffffefb
 18c:	0705a017 	smladeq	r5, r7, r0, sl
 190:	0009052f 	andeq	r0, r9, pc, lsr #10
 194:	20010402 	andcs	r0, r1, r2, lsl #8
 198:	02001d05 	andeq	r1, r0, #320	; 0x140
 19c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 1a0:	04020007 	streq	r0, [r2], #-7
 1a4:	02053c01 	andeq	r3, r5, #256	; 0x100
 1a8:	053d3d2f 	ldreq	r3, [sp, #-3375]!	; 0xfffff2d1
 1ac:	09053e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, ip, sp}
 1b0:	01040200 	mrseq	r0, R12_usr
 1b4:	001d0520 	andseq	r0, sp, r0, lsr #10
 1b8:	3c010402 	cfstrscc	mvf0, [r1], {2}
 1bc:	02000705 	andeq	r0, r0, #1310720	; 0x140000
 1c0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 1c4:	3d3d2f02 	ldccc	15, cr2, [sp, #-8]!
 1c8:	053e0705 	ldreq	r0, [lr, #-1797]!	; 0xfffff8fb
 1cc:	04020009 	streq	r0, [r2], #-9
 1d0:	1d052001 	stcne	0, cr2, [r5, #-4]
 1d4:	01040200 	mrseq	r0, R12_usr
 1d8:	0007053c 	andeq	r0, r7, ip, lsr r5
 1dc:	3c010402 	cfstrscc	mvf0, [r1], {2}
 1e0:	3d2f0205 	sfmcc	f0, 4, [pc, #-20]!	; 1d4 <startup-0x1ffffe2c>
 1e4:	3e07053d 	mcrcc	5, 0, r0, cr7, cr13, {1}
 1e8:	02000905 	andeq	r0, r0, #81920	; 0x14000
 1ec:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 1f0:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
 1f4:	07053c01 	streq	r3, [r5, -r1, lsl #24]
 1f8:	01040200 	mrseq	r0, R12_usr
 1fc:	2f02053c 	svccs	0x0002053c
 200:	01053d3d 	tsteq	r5, sp, lsr sp
 204:	3e28053d 	mcrcc	5, 1, r0, cr8, cr13, {1}
 208:	05590605 	ldrbeq	r0, [r9, #-1541]	; 0xfffff9fb
 20c:	0b053d05 	bleq	14f628 <startup-0x1feb09d8>
 210:	3e17053d 	mrccc	5, 0, r0, cr7, cr13, {1}
 214:	05660205 	strbeq	r0, [r6, #-517]!	; 0xfffffdfb
 218:	28054b01 	stmdacs	r5, {r0, r8, r9, fp, lr}
 21c:	6707054c 	strvs	r0, [r7, -ip, asr #10]
 220:	02000905 	andeq	r0, r0, #81920	; 0x14000
 224:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 228:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
 22c:	07053c01 	streq	r3, [r5, -r1, lsl #24]
 230:	01040200 	mrseq	r0, R12_usr
 234:	2f02053c 	svccs	0x0002053c
 238:	0105593d 	tsteq	r5, sp, lsr r9
 23c:	07054d3d 	smladxeq	r5, sp, sp, r4
 240:	0205753e 	andeq	r7, r5, #260046848	; 0xf800000
 244:	052f2f68 	streq	r2, [pc, #-3944]!	; fffff2e4 <__aeabi_idiv0+0xdfffed90>
 248:	07054b04 	streq	r4, [r5, -r4, lsl #22]
 24c:	2116052f 	tstcs	r6, pc, lsr #10
 250:	053c0305 	ldreq	r0, [ip, #-773]!	; 0xfffffcfb
 254:	07054908 	streq	r4, [r5, -r8, lsl #18]
 258:	3102052e 	tstcc	r2, lr, lsr #10
 25c:	054b0405 	strbeq	r0, [fp, #-1029]	; 0xfffffbfb
 260:	16052f07 	strne	r2, [r5], -r7, lsl #30
 264:	3c030521 	cfstr32cc	mvfx0, [r3], {33}	; 0x21
 268:	05490805 	strbeq	r0, [r9, #-2053]	; 0xfffff7fb
 26c:	09052e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, sp}
 270:	21010531 	tstcs	r1, r1, lsr r5
 274:	01000802 	tsteq	r0, r2, lsl #16
 278:	Address 0x00000278 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	616c6564 	cmnvs	ip, r4, ror #10
   4:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
   8:	00696c6c 	rsbeq	r6, r9, ip, ror #24
   c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  10:	6f675f69 	svcvs	0x00675f69
  14:	79786f74 	ldmdbvc	r8!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
  18:	736e7500 	cmnvc	lr, #0, 10
  1c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  20:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  24:	73610074 	cmnvc	r1, #116	; 0x74
  28:	5f696963 	svcpl	0x00696963
  2c:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
  30:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
  34:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
  38:	61007261 	tstvs	r0, r1, ror #4
  3c:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  40:	6165725f 	cmnvs	r5, pc, asr r2
  44:	6f635f64 	svcvs	0x00635f64
  48:	6f72746e 	svcvs	0x0072746e
  4c:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
  50:	63736100 	cmnvs	r3, #0, 2
  54:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
  58:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
  5c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
  60:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; fffffe98 <__aeabi_idiv0+0xdffff944>
  64:	0072656c 	rsbseq	r6, r2, ip, ror #10
  68:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
  6c:	00746e65 	rsbseq	r6, r4, r5, ror #28
  70:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  74:	00707574 	rsbseq	r7, r0, r4, ror r5
  78:	20554e47 	subscs	r4, r5, r7, asr #28
  7c:	20393943 	eorscs	r3, r9, r3, asr #18
  80:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
  84:	30322031 	eorscc	r2, r2, r1, lsr r0
  88:	30313931 	eorscc	r3, r1, r1, lsr r9
  8c:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  90:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  94:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  98:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  9c:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  a0:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  a4:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  a8:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  ac:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  b0:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  b4:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  b8:	205d3939 	subscs	r3, sp, r9, lsr r9
  bc:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  c0:	20626d75 	rsbcs	r6, r2, r5, ror sp
  c4:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  c8:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  cc:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  d0:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  d4:	616d2d20 	cmnvs	sp, r0, lsr #26
  d8:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  dc:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  e0:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  e4:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  e8:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  ec:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  f0:	00393963 	eorseq	r3, r9, r3, ror #18
  f4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  f8:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
  fc:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
 100:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
 104:	73610073 	cmnvc	r1, #115	; 0x73
 108:	5f696963 	svcpl	0x00696963
 10c:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 110:	61645f65 	cmnvs	r4, r5, ror #30
 114:	61006174 	tstvs	r0, r4, ror r1
 118:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 11c:	61007373 	tstvs	r0, r3, ror r3
 120:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 124:	6165725f 	cmnvs	r5, pc, asr r2
 128:	61645f64 	cmnvs	r4, r4, ror #30
 12c:	64006174 	strvs	r6, [r0], #-372	; 0xfffffe8c
 130:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 134:	63696d5f 	cmnvs	r9, #6080	; 0x17c0
 138:	75006f72 	strvc	r6, [r0, #-3954]	; 0xfffff08e
 13c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 140:	2064656e 	rsbcs	r6, r4, lr, ror #10
 144:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 148:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 14c:	6f63006e 	svcvs	0x0063006e
 150:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
 154:	73610064 	cmnvc	r1, #100	; 0x64
 158:	5f696963 	svcpl	0x00696963
 15c:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 160:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
 164:	79620064 	stmdbvc	r2!, {r2, r5, r6}^
 168:	72006574 	andvc	r6, r0, #116, 10	; 0x1d000000
 16c:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
 170:	61765f6e 	cmnvs	r6, lr, ror #30
 174:	0065756c 	rsbeq	r7, r5, ip, ror #10
 178:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 17c:	65740031 	ldrbvs	r0, [r4, #-49]!	; 0xffffffcf
 180:	00327473 	eorseq	r7, r2, r3, ror r4
 184:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
 188:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 18c:	7261635c 	rsbvc	r6, r1, #92, 6	; 0x70000001
 190:	4f5c736c 	svcmi	0x005c736c
 194:	7244656e 	subvc	r6, r4, #461373440	; 0x1b800000
 198:	5c657669 	stclpl	6, cr7, [r5], #-420	; 0xfffffe5c
 19c:	6c616843 	stclvs	8, cr6, [r1], #-268	; 0xfffffef4
 1a0:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
 1a4:	5441445c 	strbpl	r4, [r1], #-1116	; 0xfffffba4
 1a8:	5c373130 	ldfpls	f3, [r7], #-192	; 0xffffff40
 1ac:	6f62614c 	svcvs	0x0062614c
 1b0:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 1b4:	5c326e6f 	ldcpl	14, cr6, [r2], #-444	; 0xfffffe44
 1b8:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 1bc:	73696469 	cmnvc	r9, #1761607680	; 0x69000000
 1c0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 1c4:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 1c8:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 1cc:	6f630074 	svcvs	0x00630074
 1d0:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
 1d4:	2f3a4300 	svccs	0x003a4300
 1d8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 1dc:	61632f73 	smcvs	13043	; 0x32f3
 1e0:	2f736c72 	svccs	0x00736c72
 1e4:	44656e4f 	strbtmi	r6, [r5], #-3663	; 0xfffff1b1
 1e8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 1ec:	6168432f 	cmnvs	r8, pc, lsr #6
 1f0:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
 1f4:	41442f73 	hvcmi	17139	; 0x42f3
 1f8:	37313054 			; <UNDEFINED> instruction: 0x37313054
 1fc:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
 200:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 204:	326e6f69 	rsbcc	r6, lr, #420	; 0x1a4
 208:	6373612f 	cmnvs	r3, #-1073741813	; 0xc000000b
 20c:	69646969 	stmdbvs	r4!, {r0, r3, r5, r6, r8, fp, sp, lr}^
 210:	616c7073 	smcvs	50947	; 0xc703
 214:	74732f79 	ldrbtvc	r2, [r3], #-3961	; 0xfffff087
 218:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 21c:	00632e70 	rsbeq	r2, r3, r0, ror lr
 220:	616c6564 	cmnvs	ip, r4, ror #10
 224:	35325f79 	ldrcc	r5, [r2, #-3961]!	; 0xfffff087
 228:	736e5f30 	cmnvc	lr, #48, 30	; 0xc0
 22c:	63736100 	cmnvs	r3, #0, 2
 230:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 234:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 238:	6168635f 	cmnvs	r8, pc, asr r3
 23c:	73610072 	cmnvc	r1, #114	; 0x72
 240:	5f696963 	svcpl	0x00696963
 244:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
 248:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 24c:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
 250:	63736100 	cmnvs	r3, #0, 2
 254:	695f6969 	ldmdbvs	pc, {r0, r3, r5, r6, r8, fp, sp, lr}^	; <UNPREDICTABLE>
 258:	0074696e 	rsbseq	r6, r4, lr, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000028 	andeq	r0, r0, r8, lsr #32
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000038 	andcs	r0, r0, r8, lsr r0
  48:	00000038 	andeq	r0, r0, r8, lsr r0
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	0000001c 	andeq	r0, r0, ip, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	20000070 	andcs	r0, r0, r0, ror r0
  64:	00000048 	andeq	r0, r0, r8, asr #32
  68:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
  70:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  74:	00000007 	andeq	r0, r0, r7
  78:	0000001c 	andeq	r0, r0, ip, lsl r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	200000b8 	strhcs	r0, [r0], -r8
  84:	00000040 	andeq	r0, r0, r0, asr #32
  88:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  8c:	41018e02 	tstmi	r1, r2, lsl #28
  90:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  94:	00000007 	andeq	r0, r0, r7
  98:	0000001c 	andeq	r0, r0, ip, lsl r0
  9c:	00000000 	andeq	r0, r0, r0
  a0:	200000f8 	strdcs	r0, [r0], -r8
  a4:	00000038 	andeq	r0, r0, r8, lsr r0
  a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  ac:	41018e02 	tstmi	r1, r2, lsl #28
  b0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  b4:	00000007 	andeq	r0, r0, r7
  b8:	0000001c 	andeq	r0, r0, ip, lsl r0
  bc:	00000000 	andeq	r0, r0, r0
  c0:	20000130 	andcs	r0, r0, r0, lsr r1
  c4:	00000044 	andeq	r0, r0, r4, asr #32
  c8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  cc:	41018e02 	tstmi	r1, r2, lsl #28
  d0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  d4:	00000007 	andeq	r0, r0, r7
  d8:	0000001c 	andeq	r0, r0, ip, lsl r0
  dc:	00000000 	andeq	r0, r0, r0
  e0:	20000174 	andcs	r0, r0, r4, ror r1
  e4:	0000002c 	andeq	r0, r0, ip, lsr #32
  e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  ec:	41018e02 	tstmi	r1, r2, lsl #28
  f0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  f4:	00000007 	andeq	r0, r0, r7
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	200001a0 	andcs	r0, r0, r0, lsr #3
 104:	0000002a 	andeq	r0, r0, sl, lsr #32
 108:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 10c:	41018e02 	tstmi	r1, r2, lsl #28
 110:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 114:	00000007 	andeq	r0, r0, r7
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	00000000 	andeq	r0, r0, r0
 120:	200001ca 	andcs	r0, r0, sl, asr #3
 124:	0000002a 	andeq	r0, r0, sl, lsr #32
 128:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 12c:	41018e02 	tstmi	r1, r2, lsl #28
 130:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 134:	00000007 	andeq	r0, r0, r7
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
 13c:	00000000 	andeq	r0, r0, r0
 140:	200001f4 	strdcs	r0, [r0], -r4
 144:	0000002c 	andeq	r0, r0, ip, lsr #32
 148:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 14c:	41018e02 	tstmi	r1, r2, lsl #28
 150:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 154:	00000007 	andeq	r0, r0, r7
 158:	0000001c 	andeq	r0, r0, ip, lsl r0
 15c:	00000000 	andeq	r0, r0, r0
 160:	20000220 	andcs	r0, r0, r0, lsr #4
 164:	00000048 	andeq	r0, r0, r8, asr #32
 168:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 16c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 170:	180e4101 	stmdane	lr, {r0, r8, lr}
 174:	00070d41 	andeq	r0, r7, r1, asr #26
 178:	0000001c 	andeq	r0, r0, ip, lsl r0
 17c:	00000000 	andeq	r0, r0, r0
 180:	20000268 	andcs	r0, r0, r8, ror #4
 184:	00000048 	andeq	r0, r0, r8, asr #32
 188:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 18c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 190:	180e4101 	stmdane	lr, {r0, r8, lr}
 194:	00070d41 	andeq	r0, r7, r1, asr #26
 198:	00000018 	andeq	r0, r0, r8, lsl r0
 19c:	00000000 	andeq	r0, r0, r0
 1a0:	200002b0 			; <UNDEFINED> instruction: 0x200002b0
 1a4:	0000009a 	muleq	r0, sl, r0
 1a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1ac:	41018e02 	tstmi	r1, r2, lsl #28
 1b0:	0000070d 	andeq	r0, r0, sp, lsl #14
 1b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	2000034a 	andcs	r0, r0, sl, asr #6
 1c0:	00000038 	andeq	r0, r0, r8, lsr r0
 1c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1c8:	41018e02 	tstmi	r1, r2, lsl #28
 1cc:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 1d0:	00000007 	andeq	r0, r0, r7
 1d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d8:	00000000 	andeq	r0, r0, r0
 1dc:	20000382 	andcs	r0, r0, r2, lsl #7
 1e0:	0000003c 	andeq	r0, r0, ip, lsr r0
 1e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1e8:	41018e02 	tstmi	r1, r2, lsl #28
 1ec:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1f0:	00000007 	andeq	r0, r0, r7
 1f4:	00000020 	andeq	r0, r0, r0, lsr #32
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	200003be 			; <UNDEFINED> instruction: 0x200003be
 200:	00000082 	andeq	r0, r0, r2, lsl #1
 204:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 208:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 20c:	41018e02 	tstmi	r1, r2, lsl #28
 210:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
 214:	00000007 	andeq	r0, r0, r7
 218:	0000000c 	andeq	r0, r0, ip
 21c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 220:	7c010001 	stcvc	0, cr0, [r1], {1}
 224:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 228:	0000000c 	andeq	r0, r0, ip
 22c:	00000218 	andeq	r0, r0, r8, lsl r2
 230:	20000441 	andcs	r0, r0, r1, asr #8
 234:	0000010a 	andeq	r0, r0, sl, lsl #2
