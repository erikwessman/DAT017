
./Debug/keypad.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#define GPIO_ODR_HIGH ((volatile unsigned char *) (GPIO_D + 0x15))

__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8de 	bl	200001c4 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:



void app_init(void) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*GPIO_MODER &= 0x0000FFFF;
20000014:	4b11      	ldr	r3, [pc, #68]	; (2000005c <app_init+0x4c>)
20000016:	681a      	ldr	r2, [r3, #0]
20000018:	4b10      	ldr	r3, [pc, #64]	; (2000005c <app_init+0x4c>)
2000001a:	0412      	lsls	r2, r2, #16
2000001c:	0c12      	lsrs	r2, r2, #16
2000001e:	601a      	str	r2, [r3, #0]
	*GPIO_OTYPER &= 0xFFFF00FF;
20000020:	4b0f      	ldr	r3, [pc, #60]	; (20000060 <app_init+0x50>)
20000022:	881b      	ldrh	r3, [r3, #0]
20000024:	b29b      	uxth	r3, r3
20000026:	4a0e      	ldr	r2, [pc, #56]	; (20000060 <app_init+0x50>)
20000028:	21ff      	movs	r1, #255	; 0xff
2000002a:	400b      	ands	r3, r1
2000002c:	b29b      	uxth	r3, r3
2000002e:	8013      	strh	r3, [r2, #0]
	*GPIO_PUPDR &= 0x0000FFFF;
20000030:	4b0c      	ldr	r3, [pc, #48]	; (20000064 <app_init+0x54>)
20000032:	681a      	ldr	r2, [r3, #0]
20000034:	4b0b      	ldr	r3, [pc, #44]	; (20000064 <app_init+0x54>)
20000036:	0412      	lsls	r2, r2, #16
20000038:	0c12      	lsrs	r2, r2, #16
2000003a:	601a      	str	r2, [r3, #0]
	
	*GPIO_MODER |= 0x55005555;
2000003c:	4b07      	ldr	r3, [pc, #28]	; (2000005c <app_init+0x4c>)
2000003e:	681a      	ldr	r2, [r3, #0]
20000040:	4b06      	ldr	r3, [pc, #24]	; (2000005c <app_init+0x4c>)
20000042:	4909      	ldr	r1, [pc, #36]	; (20000068 <app_init+0x58>)
20000044:	430a      	orrs	r2, r1
20000046:	601a      	str	r2, [r3, #0]
	*GPIO_PUPDR |= 0xAA000000;
20000048:	4b06      	ldr	r3, [pc, #24]	; (20000064 <app_init+0x54>)
2000004a:	681a      	ldr	r2, [r3, #0]
2000004c:	4b05      	ldr	r3, [pc, #20]	; (20000064 <app_init+0x54>)
2000004e:	21aa      	movs	r1, #170	; 0xaa
20000050:	0609      	lsls	r1, r1, #24
20000052:	430a      	orrs	r2, r1
20000054:	601a      	str	r2, [r3, #0]
}
20000056:	46c0      	nop			; (mov r8, r8)
20000058:	46bd      	mov	sp, r7
2000005a:	bd80      	pop	{r7, pc}
2000005c:	40020c00 	andmi	r0, r2, r0, lsl #24
20000060:	40020c04 	andmi	r0, r2, r4, lsl #24
20000064:	40020c0c 	andmi	r0, r2, ip, lsl #24
20000068:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab

2000006c <ActivateRow>:

void ActivateRow(unsigned int row) {
2000006c:	b580      	push	{r7, lr}
2000006e:	b082      	sub	sp, #8
20000070:	af00      	add	r7, sp, #0
20000072:	6078      	str	r0, [r7, #4]
20000074:	687b      	ldr	r3, [r7, #4]
20000076:	2b04      	cmp	r3, #4
20000078:	d819      	bhi.n	200000ae <ActivateRow+0x42>
2000007a:	687b      	ldr	r3, [r7, #4]
2000007c:	009a      	lsls	r2, r3, #2
2000007e:	4b0e      	ldr	r3, [pc, #56]	; (200000b8 <ActivateRow+0x4c>)
20000080:	18d3      	adds	r3, r2, r3
20000082:	681b      	ldr	r3, [r3, #0]
20000084:	469f      	mov	pc, r3
	switch(row) {
		case 1: *GPIO_ODR_HIGH = 0x10; break;
20000086:	4b0d      	ldr	r3, [pc, #52]	; (200000bc <ActivateRow+0x50>)
20000088:	2210      	movs	r2, #16
2000008a:	701a      	strb	r2, [r3, #0]
2000008c:	e00f      	b.n	200000ae <ActivateRow+0x42>
		case 2: *GPIO_ODR_HIGH = 0x20; break;
2000008e:	4b0b      	ldr	r3, [pc, #44]	; (200000bc <ActivateRow+0x50>)
20000090:	2220      	movs	r2, #32
20000092:	701a      	strb	r2, [r3, #0]
20000094:	e00b      	b.n	200000ae <ActivateRow+0x42>
		case 3: *GPIO_ODR_HIGH = 0x40; break;
20000096:	4b09      	ldr	r3, [pc, #36]	; (200000bc <ActivateRow+0x50>)
20000098:	2240      	movs	r2, #64	; 0x40
2000009a:	701a      	strb	r2, [r3, #0]
2000009c:	e007      	b.n	200000ae <ActivateRow+0x42>
		case 4: *GPIO_ODR_HIGH = 0x80; break;
2000009e:	4b07      	ldr	r3, [pc, #28]	; (200000bc <ActivateRow+0x50>)
200000a0:	2280      	movs	r2, #128	; 0x80
200000a2:	701a      	strb	r2, [r3, #0]
200000a4:	e003      	b.n	200000ae <ActivateRow+0x42>
		case 0: *GPIO_ODR_HIGH = 0x00; break;
200000a6:	4b05      	ldr	r3, [pc, #20]	; (200000bc <ActivateRow+0x50>)
200000a8:	2200      	movs	r2, #0
200000aa:	701a      	strb	r2, [r3, #0]
200000ac:	46c0      	nop			; (mov r8, r8)
	}
}
200000ae:	46c0      	nop			; (mov r8, r8)
200000b0:	46bd      	mov	sp, r7
200000b2:	b002      	add	sp, #8
200000b4:	bd80      	pop	{r7, pc}
200000b6:	46c0      	nop			; (mov r8, r8)
200000b8:	200001dc 	ldrdcs	r0, [r0], -ip
200000bc:	40020c15 	andmi	r0, r2, r5, lsl ip

200000c0 <ReadColumn>:

int ReadColumn(void) {
200000c0:	b580      	push	{r7, lr}
200000c2:	b082      	sub	sp, #8
200000c4:	af00      	add	r7, sp, #0
	unsigned char c;
	c = *GPIO_IDR_HIGH;
200000c6:	4a12      	ldr	r2, [pc, #72]	; (20000110 <ReadColumn+0x50>)
200000c8:	1dfb      	adds	r3, r7, #7
200000ca:	7812      	ldrb	r2, [r2, #0]
200000cc:	701a      	strb	r2, [r3, #0]
	if (c & 0x8) return 4;
200000ce:	1dfb      	adds	r3, r7, #7
200000d0:	781b      	ldrb	r3, [r3, #0]
200000d2:	2208      	movs	r2, #8
200000d4:	4013      	ands	r3, r2
200000d6:	d001      	beq.n	200000dc <ReadColumn+0x1c>
200000d8:	2304      	movs	r3, #4
200000da:	e015      	b.n	20000108 <ReadColumn+0x48>
	if (c & 0x4) return 3;
200000dc:	1dfb      	adds	r3, r7, #7
200000de:	781b      	ldrb	r3, [r3, #0]
200000e0:	2204      	movs	r2, #4
200000e2:	4013      	ands	r3, r2
200000e4:	d001      	beq.n	200000ea <ReadColumn+0x2a>
200000e6:	2303      	movs	r3, #3
200000e8:	e00e      	b.n	20000108 <ReadColumn+0x48>
	if (c & 0x2) return 2;
200000ea:	1dfb      	adds	r3, r7, #7
200000ec:	781b      	ldrb	r3, [r3, #0]
200000ee:	2202      	movs	r2, #2
200000f0:	4013      	ands	r3, r2
200000f2:	d001      	beq.n	200000f8 <ReadColumn+0x38>
200000f4:	2302      	movs	r3, #2
200000f6:	e007      	b.n	20000108 <ReadColumn+0x48>
	if (c & 0x1) return 1;
200000f8:	1dfb      	adds	r3, r7, #7
200000fa:	781b      	ldrb	r3, [r3, #0]
200000fc:	2201      	movs	r2, #1
200000fe:	4013      	ands	r3, r2
20000100:	d001      	beq.n	20000106 <ReadColumn+0x46>
20000102:	2301      	movs	r3, #1
20000104:	e000      	b.n	20000108 <ReadColumn+0x48>
	return 0;
20000106:	2300      	movs	r3, #0
}
20000108:	0018      	movs	r0, r3
2000010a:	46bd      	mov	sp, r7
2000010c:	b002      	add	sp, #8
2000010e:	bd80      	pop	{r7, pc}
20000110:	40020c11 	andmi	r0, r2, r1, lsl ip

20000114 <keyb>:

unsigned char keyb(void) {
20000114:	b590      	push	{r4, r7, lr}
20000116:	b087      	sub	sp, #28
20000118:	af00      	add	r7, sp, #0
	unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};
2000011a:	003b      	movs	r3, r7
2000011c:	4a16      	ldr	r2, [pc, #88]	; (20000178 <keyb+0x64>)
2000011e:	ca13      	ldmia	r2!, {r0, r1, r4}
20000120:	c313      	stmia	r3!, {r0, r1, r4}
20000122:	6812      	ldr	r2, [r2, #0]
20000124:	601a      	str	r2, [r3, #0]
	int row, col;
	for (row=1; row <=4 ; row++) {
20000126:	2301      	movs	r3, #1
20000128:	617b      	str	r3, [r7, #20]
2000012a:	e019      	b.n	20000160 <keyb+0x4c>
		ActivateRow(row);
2000012c:	697b      	ldr	r3, [r7, #20]
2000012e:	0018      	movs	r0, r3
20000130:	f7ff ff9c 	bl	2000006c <ActivateRow>
		if( col = ReadColumn() ){
20000134:	f7ff ffc4 	bl	200000c0 <ReadColumn>
20000138:	0003      	movs	r3, r0
2000013a:	613b      	str	r3, [r7, #16]
2000013c:	693b      	ldr	r3, [r7, #16]
2000013e:	2b00      	cmp	r3, #0
20000140:	d00b      	beq.n	2000015a <keyb+0x46>
			ActivateRow(0);
20000142:	2000      	movs	r0, #0
20000144:	f7ff ff92 	bl	2000006c <ActivateRow>
			return key[4*(row-1)+(col-1)];
20000148:	697b      	ldr	r3, [r7, #20]
2000014a:	3b01      	subs	r3, #1
2000014c:	009a      	lsls	r2, r3, #2
2000014e:	693b      	ldr	r3, [r7, #16]
20000150:	3b01      	subs	r3, #1
20000152:	18d3      	adds	r3, r2, r3
20000154:	003a      	movs	r2, r7
20000156:	5cd3      	ldrb	r3, [r2, r3]
20000158:	e009      	b.n	2000016e <keyb+0x5a>
	for (row=1; row <=4 ; row++) {
2000015a:	697b      	ldr	r3, [r7, #20]
2000015c:	3301      	adds	r3, #1
2000015e:	617b      	str	r3, [r7, #20]
20000160:	697b      	ldr	r3, [r7, #20]
20000162:	2b04      	cmp	r3, #4
20000164:	dde2      	ble.n	2000012c <keyb+0x18>
		}
	}
	ActivateRow(0);
20000166:	2000      	movs	r0, #0
20000168:	f7ff ff80 	bl	2000006c <ActivateRow>
	return 0xFF;
2000016c:	23ff      	movs	r3, #255	; 0xff
}
2000016e:	0018      	movs	r0, r3
20000170:	46bd      	mov	sp, r7
20000172:	b007      	add	sp, #28
20000174:	bd90      	pop	{r4, r7, pc}
20000176:	46c0      	nop			; (mov r8, r8)
20000178:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

2000017c <out7seg>:

void out7seg(unsigned char c) {
2000017c:	b5b0      	push	{r4, r5, r7, lr}
2000017e:	b086      	sub	sp, #24
20000180:	af00      	add	r7, sp, #0
20000182:	0002      	movs	r2, r0
20000184:	1dfb      	adds	r3, r7, #7
20000186:	701a      	strb	r2, [r3, #0]
	char segCode[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x0F, 0x5E, 0x79, 0x71};
20000188:	2008      	movs	r0, #8
2000018a:	183b      	adds	r3, r7, r0
2000018c:	4a0b      	ldr	r2, [pc, #44]	; (200001bc <out7seg+0x40>)
2000018e:	ca32      	ldmia	r2!, {r1, r4, r5}
20000190:	c332      	stmia	r3!, {r1, r4, r5}
20000192:	6812      	ldr	r2, [r2, #0]
20000194:	601a      	str	r2, [r3, #0]
	if (c <= 15) {
20000196:	1dfb      	adds	r3, r7, #7
20000198:	781b      	ldrb	r3, [r3, #0]
2000019a:	2b0f      	cmp	r3, #15
2000019c:	d806      	bhi.n	200001ac <out7seg+0x30>
		*GPIO_ODR_LOW = segCode[c];
2000019e:	1dfb      	adds	r3, r7, #7
200001a0:	781b      	ldrb	r3, [r3, #0]
200001a2:	4907      	ldr	r1, [pc, #28]	; (200001c0 <out7seg+0x44>)
200001a4:	183a      	adds	r2, r7, r0
200001a6:	5cd3      	ldrb	r3, [r2, r3]
200001a8:	700b      	strb	r3, [r1, #0]
	} else {
		*GPIO_ODR_LOW = 0;
	}
}
200001aa:	e002      	b.n	200001b2 <out7seg+0x36>
		*GPIO_ODR_LOW = 0;
200001ac:	4b04      	ldr	r3, [pc, #16]	; (200001c0 <out7seg+0x44>)
200001ae:	2200      	movs	r2, #0
200001b0:	701a      	strb	r2, [r3, #0]
}
200001b2:	46c0      	nop			; (mov r8, r8)
200001b4:	46bd      	mov	sp, r7
200001b6:	b006      	add	sp, #24
200001b8:	bdb0      	pop	{r4, r5, r7, pc}
200001ba:	46c0      	nop			; (mov r8, r8)
200001bc:	20000200 	andcs	r0, r0, r0, lsl #4
200001c0:	40020c14 	andmi	r0, r2, r4, lsl ip

200001c4 <main>:

void main(void) {
200001c4:	b580      	push	{r7, lr}
200001c6:	af00      	add	r7, sp, #0
	app_init();
200001c8:	f7ff ff22 	bl	20000010 <app_init>
	while(1) {
		out7seg(keyb());
200001cc:	f7ff ffa2 	bl	20000114 <keyb>
200001d0:	0003      	movs	r3, r0
200001d2:	0018      	movs	r0, r3
200001d4:	f7ff ffd2 	bl	2000017c <out7seg>
200001d8:	e7f8      	b.n	200001cc <main+0x8>
200001da:	46c0      	nop			; (mov r8, r8)
200001dc:	200000a6 	andcs	r0, r0, r6, lsr #1
200001e0:	20000086 	andcs	r0, r0, r6, lsl #1
200001e4:	2000008e 	andcs	r0, r0, lr, lsl #1
200001e8:	20000096 	mulcs	r0, r6, r0
200001ec:	2000009e 	mulcs	r0, lr, r0
200001f0:	0a030201 	beq	200c09fc <main+0xc0838>
200001f4:	0b060504 	bleq	2018160c <main+0x181448>
200001f8:	0c090807 	stceq	8, cr0, [r9], {7}
200001fc:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 200001cc <main+0x8>
20000200:	4f5b063f 	svcmi	0x005b063f
20000204:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
20000208:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	; 0xfffffe04
2000020c:	71795e0f 	cmnvc	r9, pc, lsl #28

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000015d 	andeq	r0, r0, sp, asr r1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000031 	andeq	r0, r0, r1, lsr r0
  10:	0001060c 	andeq	r0, r1, ip, lsl #12
  14:	0000b500 	andeq	fp, r0, r0, lsl #10
	...
  24:	014b0200 	mrseq	r0, (UNDEF: 107)
  28:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
  2c:	0001c406 	andeq	ip, r1, r6, lsl #8
  30:	00001620 	andeq	r1, r0, r0, lsr #12
  34:	039c0100 	orrseq	r0, ip, #0, 2
  38:	000000ad 	andeq	r0, r0, sp, lsr #1
  3c:	7c064501 	cfstr32vc	mvfx4, [r6], {1}
  40:	48200001 	stmdami	r0!, {r0}
  44:	01000000 	mrseq	r0, (UNDEF: 0)
  48:	00006a9c 	muleq	r0, ip, sl
  4c:	00630400 	rsbeq	r0, r3, r0, lsl #8
  50:	6a1c4501 	bvs	71145c <startup-0x1f8eeba4>
  54:	02000000 	andeq	r0, r0, #0
  58:	29055f91 	stmdbcs	r5, {r0, r4, r7, r8, r9, sl, fp, ip, lr}
  5c:	01000000 	mrseq	r0, (UNDEF: 0)
  60:	00710746 	rsbseq	r0, r1, r6, asr #14
  64:	91020000 	mrsls	r0, (UNDEF: 2)
  68:	01060060 	tsteq	r6, r0, rrx
  6c:	0000f808 	andeq	pc, r0, r8, lsl #16
  70:	00880700 	addeq	r0, r8, r0, lsl #14
  74:	00810000 	addeq	r0, r1, r0
  78:	81080000 	mrshi	r0, (UNDEF: 8)
  7c:	0f000000 	svceq	0x00000000
  80:	07040600 	streq	r0, [r4, -r0, lsl #12]
  84:	00000000 	andeq	r0, r0, r0
  88:	01080106 	tsteq	r8, r6, lsl #2
  8c:	09000001 	stmdbeq	r0, {r0}
  90:	0000000d 	andeq	r0, r0, sp
  94:	6a0f3701 	bvs	3cdca0 <startup-0x1fc32360>
  98:	14000000 	strne	r0, [r0], #-0
  9c:	68200001 	stmdavs	r0!, {r0}
  a0:	01000000 	mrseq	r0, (UNDEF: 0)
  a4:	0000d79c 	muleq	r0, ip, r7
  a8:	656b0a00 	strbvs	r0, [fp, #-2560]!	; 0xfffff600
  ac:	38010079 	stmdacc	r1, {r0, r3, r4, r5, r6}
  b0:	0000d710 	andeq	sp, r0, r0, lsl r7
  b4:	58910200 	ldmpl	r1, {r9}
  b8:	776f720a 	strbvc	r7, [pc, -sl, lsl #4]!
  bc:	06390100 	ldrteq	r0, [r9], -r0, lsl #2
  c0:	000000e7 	andeq	r0, r0, r7, ror #1
  c4:	0a6c9102 	beq	1b244d4 <startup-0x1e4dbb2c>
  c8:	006c6f63 	rsbeq	r6, ip, r3, ror #30
  cc:	e70b3901 	str	r3, [fp, -r1, lsl #18]
  d0:	02000000 	andeq	r0, r0, #0
  d4:	07006891 			; <UNDEFINED> instruction: 0x07006891
  d8:	0000006a 	andeq	r0, r0, sl, rrx
  dc:	000000e7 	andeq	r0, r0, r7, ror #1
  e0:	00008108 	andeq	r8, r0, r8, lsl #2
  e4:	0b000f00 	bleq	3cec <startup-0x1fffc314>
  e8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  ec:	1e0c0074 	mcrne	0, 0, r0, cr12, cr4, {3}
  f0:	01000000 	mrseq	r0, (UNDEF: 0)
  f4:	00e7052d 	rsceq	r0, r7, sp, lsr #10
  f8:	00c00000 	sbceq	r0, r0, r0
  fc:	00542000 	subseq	r2, r4, r0
 100:	9c010000 	stcls	0, cr0, [r1], {-0}
 104:	00000116 	andeq	r0, r0, r6, lsl r1
 108:	0100630a 	tsteq	r0, sl, lsl #6
 10c:	006a102e 	rsbeq	r1, sl, lr, lsr #32
 110:	91020000 	mrsls	r0, (UNDEF: 2)
 114:	12030077 	andne	r0, r3, #119	; 0x77
 118:	01000000 	mrseq	r0, (UNDEF: 0)
 11c:	006c0623 	rsbeq	r0, ip, r3, lsr #12
 120:	00542000 	subseq	r2, r4, r0
 124:	9c010000 	stcls	0, cr0, [r1], {-0}
 128:	0000013c 	andeq	r0, r0, ip, lsr r1
 12c:	776f7204 	strbvc	r7, [pc, -r4, lsl #4]!
 130:	1f230100 	svcne	0x00230100
 134:	00000081 	andeq	r0, r0, r1, lsl #1
 138:	00749102 	rsbseq	r9, r4, r2, lsl #2
 13c:	0001500d 	andeq	r5, r1, sp
 140:	061a0100 	ldreq	r0, [sl], -r0, lsl #2
 144:	20000010 	andcs	r0, r0, r0, lsl r0
 148:	0000005c 	andeq	r0, r0, ip, asr r0
 14c:	f00d9c01 			; <UNDEFINED> instruction: 0xf00d9c01
 150:	01000000 	mrseq	r0, (UNDEF: 0)
 154:	00000610 	andeq	r0, r0, r0, lsl r6
 158:	000c2000 	andeq	r2, ip, r0
 15c:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	00194296 	mulseq	r9, r6, r2
  2c:	012e0300 			; <UNDEFINED> instruction: 0x012e0300
  30:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  3c:	06120111 			; <UNDEFINED> instruction: 0x06120111
  40:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  44:	00130119 	andseq	r0, r3, r9, lsl r1
  48:	00050400 	andeq	r0, r5, r0, lsl #8
  4c:	0b3a0803 	bleq	e82060 <startup-0x1f17dfa0>
  50:	0b390b3b 	bleq	e42d44 <startup-0x1f1bd2bc>
  54:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  58:	34050000 	strcc	r0, [r5], #-0
  5c:	3a0e0300 	bcc	380c64 <startup-0x1fc7f39c>
  60:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  64:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  68:	06000018 			; <UNDEFINED> instruction: 0x06000018
  6c:	0b0b0024 	bleq	2c0104 <startup-0x1fd3fefc>
  70:	0e030b3e 	vmoveq.16	d3[0], r0
  74:	01070000 	mrseq	r0, (UNDEF: 7)
  78:	01134901 	tsteq	r3, r1, lsl #18
  7c:	08000013 	stmdaeq	r0, {r0, r1, r4}
  80:	13490021 	movtne	r0, #36897	; 0x9021
  84:	00000b2f 	andeq	r0, r0, pc, lsr #22
  88:	3f012e09 	svccc	0x00012e09
  8c:	3a0e0319 	bcc	380cf8 <startup-0x1fc7f308>
  90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  94:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  98:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  9c:	96184006 	ldrls	r4, [r8], -r6
  a0:	13011942 	movwne	r1, #6466	; 0x1942
  a4:	340a0000 	strcc	r0, [sl], #-0
  a8:	3a080300 	bcc	200cb0 <startup-0x1fdff350>
  ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  b0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  b4:	0b000018 	bleq	11c <startup-0x1ffffee4>
  b8:	0b0b0024 	bleq	2c0150 <startup-0x1fd3feb0>
  bc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  c0:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
  c4:	03193f01 	tsteq	r9, #1, 30
  c8:	3b0b3a0e 	blcc	2ce908 <startup-0x1fd316f8>
  cc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  d0:	11134919 	tstne	r3, r9, lsl r9
  d4:	40061201 	andmi	r1, r6, r1, lsl #4
  d8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  dc:	00001301 	andeq	r1, r0, r1, lsl #6
  e0:	3f002e0d 	svccc	0x00002e0d
  e4:	3a0e0319 	bcc	380d50 <startup-0x1fc7f2b0>
  e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  ec:	1119270b 	tstne	r9, fp, lsl #14
  f0:	40061201 	andmi	r1, r6, r1, lsl #4
  f4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  f8:	Address 0x000000f8 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001ca 	andeq	r0, r0, sl, asr #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001da 	ldrdcs	r0, [r0], -sl
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000017a 	andeq	r0, r0, sl, ror r1
   4:	005b0003 	subseq	r0, fp, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
  28:	6e4f2f73 	mcrvs	15, 2, r2, cr15, cr3, {3}
  2c:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
  30:	432f6576 			; <UNDEFINED> instruction: 0x432f6576
  34:	6d6c6168 	stfvse	f6, [ip, #-416]!	; 0xfffffe60
  38:	2f737265 	svccs	0x00737265
  3c:	30544144 	subscc	r4, r4, r4, asr #2
  40:	4c2f3731 	stcmi	7, cr3, [pc], #-196	; ffffff84 <main+0xdffffdc0>
  44:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  48:	6f697461 	svcvs	0x00697461
  4c:	6b2f326e 	blvs	bcca0c <startup-0x1f4335f4>
  50:	61707965 	cmnvs	r0, r5, ror #18
  54:	73000064 	movwvc	r0, #100	; 0x64
  58:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  5c:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  60:	00000100 	andeq	r0, r0, r0, lsl #2
  64:	00010500 	andeq	r0, r1, r0, lsl #10
  68:	00000205 	andeq	r0, r0, r5, lsl #4
  6c:	10032000 	andne	r2, r3, r0
  70:	21211301 			; <UNDEFINED> instruction: 0x21211301
  74:	0302212f 	movweq	r2, #8495	; 0x212f
  78:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
  7c:	02050015 	andeq	r0, r5, #21
  80:	20000010 	andcs	r0, r0, r0, lsl r0
  84:	05011903 	streq	r1, [r1, #-2307]	; 0xfffff6fd
  88:	0f052f0e 	svceq	0x00052f0e
  8c:	830e0567 	movwhi	r0, #58727	; 0xe567
  90:	01056768 	tsteq	r5, r8, ror #14
  94:	ae240575 	mcrge	5, 1, r0, cr4, cr5, {3}
  98:	05ca0b05 	strbeq	r0, [sl, #2821]	; 0xb05
  9c:	0305201a 	movweq	r2, #20506	; 0x501a
  a0:	210b052e 	tstcs	fp, lr, lsr #10
  a4:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
  a8:	0b052e03 	bleq	14b8bc <startup-0x1feb4744>
  ac:	201a0521 	andscs	r0, sl, r1, lsr #10
  b0:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
  b4:	1a05210b 	bne	1484e8 <startup-0x1feb7b18>
  b8:	2e030520 	cfsh32cs	mvfx0, mvfx3, #16
  bc:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
  c0:	0305201a 	movweq	r2, #20506	; 0x501a
  c4:	2201052e 	andcs	r0, r1, #192937984	; 0xb800000
  c8:	05921605 	ldreq	r1, [r2, #1541]	; 0x605
  cc:	04053e06 	streq	r3, [r5], #-3590	; 0xfffff1fa
  d0:	3d080520 	cfstr32cc	mvfx0, [r8, #-128]	; 0xffffff80
  d4:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
  d8:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
  dc:	08052001 	stmdaeq	r5, {r0, sp}
  e0:	4a05052f 	bmi	1415a4 <startup-0x1febea5c>
  e4:	02001605 	andeq	r1, r0, #5242880	; 0x500000
  e8:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
  ec:	05052f08 	streq	r2, [r5, #-3848]	; 0xfffff0f8
  f0:	0016054a 	andseq	r0, r6, sl, asr #10
  f4:	20010402 	andcs	r0, r1, r2, lsl #8
  f8:	052f0805 	streq	r0, [pc, #-2053]!	; fffff8fb <main+0xdffff737>
  fc:	16054a05 	strne	r4, [r5], -r5, lsl #20
 100:	01040200 	mrseq	r0, R12_usr
 104:	2f090520 	svccs	0x00090520
 108:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
 10c:	1005681a 	andne	r6, r5, sl, lsl r8
 110:	680a053d 	stmdavs	sl, {r0, r2, r3, r4, r5, r8, sl}
 114:	052e0205 	streq	r0, [lr, #-517]!	; 0xfffffdfb
 118:	0d052103 	stfeqs	f2, [r5, #-12]
 11c:	4a05054b 	bmi	141650 <startup-0x1febe9b0>
 120:	053d0405 	ldreq	r0, [sp, #-1029]!	; 0xfffffbfb
 124:	10053d15 	andne	r3, r5, r5, lsl sp
 128:	201d052e 	andscs	r0, sp, lr, lsr #10
 12c:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
 130:	1b05200e 	blne	148170 <startup-0x1feb7e90>
 134:	02040200 	andeq	r0, r4, #0, 4
 138:	00020538 	andeq	r0, r2, r8, lsr r5
 13c:	3c010402 	cfstrscc	mvf0, [r1], {2}
 140:	3d090543 	cfstr32cc	mvfx0, [r9, #-268]	; 0xfffffef4
 144:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
 148:	05210104 	streq	r0, [r1, #-260]!	; 0xfffffefc
 14c:	0705761f 	smladeq	r5, pc, r6, r7	; <UNPREDICTABLE>
 150:	75050567 	strvc	r0, [r5, #-1383]	; 0xfffffa99
 154:	054b1a05 	strbeq	r1, [fp, #-2565]	; 0xfffff5fb
 158:	1a052e03 	bne	14b96c <startup-0x1feb4694>
 15c:	2e110520 	cfmul64cs	mvdx0, mvdx1, mvdx0
 160:	05240105 	streq	r0, [r4, #-261]!	; 0xfffffefb
 164:	11051e03 	tstne	r5, r3, lsl #28
 168:	30010520 	andcc	r0, r1, r0, lsr #10
 16c:	05921105 	ldreq	r1, [r2, #261]	; 0x105
 170:	03052f02 	movweq	r2, #24322	; 0x5f02
 174:	01040200 	mrseq	r0, R12_usr
 178:	00070230 	andeq	r0, r7, r0, lsr r2
 17c:	Address 0x0000017c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  10:	63410062 	movtvs	r0, #4194	; 0x1062
  14:	61766974 	cmnvs	r6, r4, ror r9
  18:	6f526574 	svcvs	0x00526574
  1c:	65520077 	ldrbvs	r0, [r2, #-119]	; 0xffffff89
  20:	6f436461 	svcvs	0x00436461
  24:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
  28:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
  2c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
  30:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  34:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
  38:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  3c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  40:	31393130 	teqcc	r9, r0, lsr r1
  44:	20353230 	eorscs	r3, r5, r0, lsr r2
  48:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  4c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  50:	415b2029 	cmpmi	fp, r9, lsr #32
  54:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  58:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  5c:	6172622d 	cmnvs	r2, sp, lsr #4
  60:	2068636e 	rsbcs	r6, r8, lr, ror #6
  64:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  68:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  6c:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  70:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
  74:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  78:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  7c:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  80:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
  84:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
  88:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  8c:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  90:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  94:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  98:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  9c:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  a0:	20304f2d 	eorscs	r4, r0, sp, lsr #30
  a4:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
  a8:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
  ac:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
  b0:	67657337 			; <UNDEFINED> instruction: 0x67657337
  b4:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
  b8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  bc:	61635c73 	smcvs	13763	; 0x35c3
  c0:	5c736c72 	ldclpl	12, cr6, [r3], #-456	; 0xfffffe38
  c4:	44656e4f 	strbtmi	r6, [r5], #-3663	; 0xfffff1b1
  c8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
  cc:	6168435c 	cmnvs	r8, ip, asr r3
  d0:	72656d6c 	rsbvc	r6, r5, #108, 26	; 0x1b00
  d4:	41445c73 	hvcmi	17859	; 0x45c3
  d8:	37313054 			; <UNDEFINED> instruction: 0x37313054
  dc:	62614c5c 	rsbvs	r4, r1, #92, 24	; 0x5c00
  e0:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  e4:	326e6f69 	rsbcc	r6, lr, #420	; 0x1a4
  e8:	79656b5c 	stmdbvc	r5!, {r2, r3, r4, r6, r8, r9, fp, sp, lr}^
  ec:	00646170 	rsbeq	r6, r4, r0, ror r1
  f0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  f4:	00707574 	rsbseq	r7, r0, r4, ror r5
  f8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  fc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 100:	61686320 	cmnvs	r8, r0, lsr #6
 104:	3a430072 	bcc	10c02d4 <startup-0x1ef3fd2c>
 108:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 10c:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
 110:	736c7261 	cmnvc	ip, #268435462	; 0x10000006
 114:	656e4f2f 	strbvs	r4, [lr, #-3887]!	; 0xfffff0d1
 118:	76697244 	strbtvc	r7, [r9], -r4, asr #4
 11c:	68432f65 	stmdavs	r3, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 120:	656d6c61 	strbvs	r6, [sp, #-3169]!	; 0xfffff39f
 124:	442f7372 	strtmi	r7, [pc], #-882	; 12c <startup-0x1ffffed4>
 128:	31305441 	teqcc	r0, r1, asr #8
 12c:	614c2f37 	cmpvs	ip, r7, lsr pc
 130:	61726f62 	cmnvs	r2, r2, ror #30
 134:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 138:	656b2f32 	strbvs	r2, [fp, #-3890]!	; 0xfffff0ce
 13c:	64617079 	strbtvs	r7, [r1], #-121	; 0xffffff87
 140:	6174732f 	cmnvs	r4, pc, lsr #6
 144:	70757472 	rsbsvc	r7, r5, r2, ror r4
 148:	6d00632e 	stcvs	3, cr6, [r0, #-184]	; 0xffffff48
 14c:	006e6961 	rsbeq	r6, lr, r1, ror #18
 150:	5f707061 	svcpl	0x00707061
 154:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	0000005c 	andeq	r0, r0, ip, asr r0
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	2000006c 	andcs	r0, r0, ip, rrx
  48:	00000054 	andeq	r0, r0, r4, asr r0
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	100e4101 	andne	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	200000c0 	andcs	r0, r0, r0, asr #1
  68:	00000054 	andeq	r0, r0, r4, asr r0
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	100e4101 	andne	r4, lr, r1, lsl #2
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	00000020 	andeq	r0, r0, r0, lsr #32
  80:	00000000 	andeq	r0, r0, r0
  84:	20000114 	andcs	r0, r0, r4, lsl r1
  88:	00000068 	andeq	r0, r0, r8, rrx
  8c:	400c0e41 	andmi	r0, ip, r1, asr #28
  90:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  94:	018e4002 	orreq	r4, lr, r2
  98:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  9c:	0000070d 	andeq	r0, r0, sp, lsl #14
  a0:	00000024 	andeq	r0, r0, r4, lsr #32
  a4:	00000000 	andeq	r0, r0, r0
  a8:	2000017c 	andcs	r0, r0, ip, ror r1
  ac:	00000048 	andeq	r0, r0, r8, asr #32
  b0:	40100e41 	andsmi	r0, r0, r1, asr #28
  b4:	85400484 	strbhi	r0, [r0, #-1156]	; 0xfffffb7c
  b8:	02874003 	addeq	r4, r7, #3
  bc:	41018e40 	tstmi	r1, r0, asr #28
  c0:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
  c4:	00000007 	andeq	r0, r0, r7
  c8:	00000018 	andeq	r0, r0, r8, lsl r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	200001c4 	andcs	r0, r0, r4, asr #3
  d4:	00000016 	andeq	r0, r0, r6, lsl r0
  d8:	40080e41 	andmi	r0, r8, r1, asr #28
  dc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  e0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
